{"version":3,"file":"7778.235c0d729b46d2da.js","mappings":"yKACO,MAAMA,UAAuBC,KAC1BC,mBAAmBC,GAAS,SAAAC,KAAA,YAC9B,OAAO,IAAIC,QAAQ,CAACC,EAASC,KACzBC,UAAUC,YAAYP,mBAAmBQ,IACrCJ,EAAQI,EAAG,EACZC,IACCJ,EAAOI,EAAG,EACXC,OAAOC,OAAO,CAAEC,oBAAoB,EAAOC,QAAS,IAAOC,WAAY,GAAKb,GAAQ,EACxF,EAP2B,EAQlC,CACMc,cAAcd,EAASe,GAAU,SAAAd,KAAA,YAMnC,MAAQ,GALGI,UAAUC,YAAYQ,cAAcP,IAC3CQ,EAASR,EAAG,EACbC,IACCO,EAAS,KAAMP,EAAG,EACnBC,OAAOC,OAAO,CAAEC,oBAAoB,EAAOC,QAAS,IAAOC,WAAY,GAAKb,KAChE,EANoB,EAOvC,CACMgB,WAAWhB,GAAS,SAAAC,KAAA,YACtBgB,OAAOZ,UAAUC,YAAYU,WAAWE,SAASlB,EAAQmB,GAAI,IAAK,EAD5C,EAE1B,CACMC,mBAAmB,IAAAC,EAAAC,KAAA,SAAArB,KAAA,YACrB,UAAWI,UAAc,MAAgBA,UAAUkB,YAC/C,MAAMF,EAAKG,YAAY,iDAE3B,MAAMC,QAAmBR,OAAOZ,UAAUkB,YAAYG,MAAM,CACxDC,KAAM,gBAEV,MAAO,CAAEC,SAAUH,EAAWI,MAAOC,eAAgBL,EAAWI,MAAQ,EAPnD,EAQzB,CACME,qBAAqB,IAAAC,EAAAV,KAAA,SAAArB,KAAA,YACvB,MAAM+B,EAAKC,cAAc,0BAA2B,EAD7B,EAE3B,EAEJ,MAAMC,EAAc,IAAIrC","names":["GeolocationWeb","WebPlugin","getCurrentPosition","options","_asyncToGenerator","Promise","resolve","reject","navigator","geolocation","pos","err","Object","assign","enableHighAccuracy","timeout","maximumAge","watchPosition","callback","clearWatch","window","parseInt","id","checkPermissions","_this","this","permissions","unavailable","permission","query","name","location","state","coarseLocation","requestPermissions","_this2","unimplemented","Geolocation"],"sourceRoot":"webpack:///","sources":["./node_modules/@capacitor/geolocation/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class GeolocationWeb extends WebPlugin {\n    async getCurrentPosition(options) {\n        return new Promise((resolve, reject) => {\n            navigator.geolocation.getCurrentPosition(pos => {\n                resolve(pos);\n            }, err => {\n                reject(err);\n            }, Object.assign({ enableHighAccuracy: false, timeout: 10000, maximumAge: 0 }, options));\n        });\n    }\n    async watchPosition(options, callback) {\n        const id = navigator.geolocation.watchPosition(pos => {\n            callback(pos);\n        }, err => {\n            callback(null, err);\n        }, Object.assign({ enableHighAccuracy: false, timeout: 10000, maximumAge: 0 }, options));\n        return `${id}`;\n    }\n    async clearWatch(options) {\n        window.navigator.geolocation.clearWatch(parseInt(options.id, 10));\n    }\n    async checkPermissions() {\n        if (typeof navigator === 'undefined' || !navigator.permissions) {\n            throw this.unavailable('Permissions API not available in this browser');\n        }\n        const permission = await window.navigator.permissions.query({\n            name: 'geolocation',\n        });\n        return { location: permission.state, coarseLocation: permission.state };\n    }\n    async requestPermissions() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n}\nconst Geolocation = new GeolocationWeb();\nexport { Geolocation };\n"],"x_google_ignoreList":[0]}