{"version":3,"file":"4024.04c353650f3e0af1.js","mappings":"6MAKA,MAAMA,EAAiB,CACrB,CACEC,KAAM,GACNC,UCCqB,UAAAC,EAAnB,MAAOC,EAMXC,YACUC,EACAC,GADAC,KAAAF,UACAE,KAAAD,WAGV,CAEAE,WACED,KAAKF,QAAQI,IAAI,YACdC,KAAKC,IAEFJ,KAAKK,SADHD,GAGc,OAItBJ,KAAKF,QAAQI,IAAI,eACdC,KAAKG,IAEFN,KAAKO,YADHD,GAGiB,IAG3B,CAEAE,iBACER,KAAKF,QAAQW,IAAI,WAAYT,KAAKK,UAClCL,KAAKD,UAAUW,eAAeV,KAAKK,UACnCL,KAAKD,UAAUY,IAAIX,KAAKK,SAC1B,CAEAO,cACEZ,KAAKF,QAAQW,IAAI,QAAST,KAAKa,MACjC,CAEAC,oBACEd,KAAKF,QAAQW,IAAI,cAAeT,KAAKO,YACvC,WA7CWX,0CAAYmB,MAAAC,KAAAD,MAAAE,MAAA,0BAAZrB,EAAYsB,UAAA,mBAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,shBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICTzBR,MAAA,eAAAA,CAAY,kBAAZA,CAAY,mBAGNA,MAAA,qBACFA,QACAA,MAAA,eACEA,MAAA,wBACFA,YAIJA,MAAA,gBAAAA,CAAa,aAAbA,CAAa,aAAbA,CAAa,mBAI8DA,MAAA,yBAAAU,GAAA,OAAAD,EAAAnB,SAAAoB,CAAA,EAAAV,CAAsB,8BAAaS,EAAAhB,gBAAgB,+CACtHO,MAAA,0BAAmDA,MAAA,0BAAyBA,QAC5EA,MAAA,0BAAmDA,MAAA,0BAAyBA,QAC5EA,MAAA,0BAAmDA,MAAA,0BAAyBA,QAC5EA,MAAA,0BAAkDA,MAAA,0BAAwBA,QAC1EA,MAAA,0BAAkDA,MAAA,0BAAwBA,QAC1EA,MAAA,0BAAsDA,MAAA,0BAA4BA,QAClFA,MAAA,0BAAmDA,MAAA,0BAAyBA,YAIhFA,MAAA,cAAAA,CAAU,YAAVA,CAAU,gBAEGA,MAAA,gDAAkFA,UAE7FA,MAAA,mBAKEA,MAAA,yBAAAU,GAAA,OAAAD,EAAAjB,YAAAkB,CAAA,EAAAV,CAAyB,4BACdS,EAAAV,mBAAmB,GAEhCC,qBAhCAA,MAAA,GAAAA,MAAA,IAAAA,MAAA,sBASYA,MAAA,GAAAA,MAAA,QAAAA,MAAA,mBAA6GA,MAAA,aAAAA,MAAA,iBAApDA,MAAA,UAAAS,EAAAnB,UAChBU,MAAA,GAAAA,YAAA,kBACAA,MAAA,GAAAA,YAAA,kBACAA,MAAA,GAAAA,YAAA,kBACDA,MAAA,GAAAA,YAAA,iBACAA,MAAA,GAAAA,YAAA,iBACIA,MAAA,GAAAA,YAAA,qBACHA,MAAA,GAAAA,YAAA,kBAM1CA,MAAA,GAAAA,MAAA,GAAAA,MAAA,kCAAAS,EAAAjB,YAAA,IAAAQ,MAAA,sBAOTA,MAAA,GAAAA,MAAA,UAAAS,EAAAjB,qHD1BKX,CAAY,ODOlB,IAAM8B,EAAyB,UAAAC,EAAhC,MAAOD,qDAAyB,0BAAzBA,gCAHDE,KAAaC,SAASrC,GACtBoC,QAECF,CAAyB,KGKzBI,EAAkB,UAAAC,EAAzB,MAAOD,qDAAkB,0BAAlBA,iCAFA,CAAEE,KAAeC,QAAA,CAP1BC,KACAC,KACAC,KACAC,KACAX,KAKSI,CAAkB","names":["routes","path","component","_SettingsPage","SettingsPage","constructor","storage","translate","this","ngOnInit","get","then","langValue","language","searchValue","searchRange","selectLanguage","set","setDefaultLang","use","selectTheme","theme","selectSearchRange","i0","i1","i2","selectors","decls","vars","consts","template","rf","ctx","$event","SettingsPageRoutingModule","_SettingsPageRoutingModule","RouterModule","forChild","SettingsPageModule","_SettingsPageModule","StorageService","imports","CommonModule","FormsModule","IonicModule","TranslateModule"],"sourceRoot":"webpack:///","sources":["./src/app/pages/settings/settings-routing.module.ts","./src/app/pages/settings/settings.page.ts","./src/app/pages/settings/settings.page.html","./src/app/pages/settings/settings.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { StorageService } from '../../services/storage.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n\n  language!: string;\n  theme!: string;\n  searchRange!: number;\n\n  constructor(\n    private storage: StorageService,\n    private translate: TranslateService\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.storage.get('language')\n      .then(langValue => {\n        if (langValue) {\n          this.language = langValue;\n        } else {\n          this.language = 'en';\n        }\n      });\n\n    this.storage.get('searchRange')\n      .then(searchValue => {\n        if (searchValue) {\n          this.searchRange = searchValue;\n        } else {\n          this.searchRange = 25;\n        }\n      });\n  }\n\n  selectLanguage() {\n    this.storage.set('language', this.language);\n    this.translate.setDefaultLang(this.language);\n    this.translate.use(this.language);\n  }\n\n  selectTheme() {\n    this.storage.set('theme', this.theme);\n  }\n\n  selectSearchRange() {\n    this.storage.set('searchRange', this.searchRange);\n  }\n\n}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>\n      {{'SETTINGS' | translate}}\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-list>\n\n    <ion-item>\n      <ion-select label=\"{{'LANGUAGE' | translate}}\" aria-label=\"Language\" [(ngModel)]=\"language\" (ionChange)=selectLanguage() cancelText=\"{{'CANCEL' | translate}}\">\n        <ion-select-option aria-label=\"English\" value=\"en\">{{'ENGLISH' | translate}}</ion-select-option>\n        <ion-select-option aria-label=\"Italian\" value=\"it\">{{'ITALIAN' | translate}}</ion-select-option>\n        <ion-select-option aria-label=\"Spanish\" value=\"es\">{{'SPANISH' | translate}}</ion-select-option>\n        <ion-select-option aria-label=\"Danish\" value=\"da\">{{'DANISH' | translate}}</ion-select-option>\n        <ion-select-option aria-label=\"Polish\" value=\"pl\">{{'POLISH' | translate}}</ion-select-option>\n        <ion-select-option aria-label=\"Portuguese\" value=\"pt\">{{'PORTUGUESE' | translate}}</ion-select-option>\n        <ion-select-option aria-label=\"Russian\" value=\"ru\">{{'RUSSIAN' | translate}}</ion-select-option>\n      </ion-select>\n    </ion-item>\n\n    <ion-item>\n      <div class=\"ion-text-wrap\">\n      <ion-label>{{'SEARCHRANGESETTING' | translate}} = {{searchRange}} {{'MEETINGS' | translate }}</ion-label>\n    </div>\n      <ion-range \n        aria-label=\"Search Range\" \n        id=\"RadiusRange\" \n        min=\"5\" \n        max=\"50\" \n        [(ngModel)]=\"searchRange\" \n        (ionBlur)=\"selectSearchRange()\" \n        pin=\"true\">\n      </ion-range>\n    </ion-item>\n\n  </ion-list>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { SettingsPageRoutingModule } from './settings-routing.module';\nimport { SettingsPage } from './settings.page';\n\nimport { TranslateModule } from '@ngx-translate/core';\nimport { StorageService } from 'src/app/services/storage.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [SettingsPage],\n  providers: [ StorageService]\n})\nexport class SettingsPageModule {}\n"],"x_google_ignoreList":[]}