{"version":3,"file":"polyfills.adeb203910b244e8.js","mappings":"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","names":["window","__Zone_disable_customElements","global","globalThis","__symbol__","name","__Zone_symbol_prefix","ObjectGetOwnPropertyDescriptor","Object","getOwnPropertyDescriptor","ObjectDefineProperty","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","ObjectCreate","create","ArraySlice","Array","prototype","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","wrapWithCurrentZone","callback","source","Zone","current","wrap","scheduleMacroTaskWithCurrentZone","data","customSchedule","customCancel","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","undefined","_global","REMOVE_ATTRIBUTE","bindArguments","args","i","length","isPropertyWritable","propertyDesc","writable","get","set","isWebWorker","WorkerGlobalScope","self","isNode","process","toString","call","isBrowser","HTMLElement","isMix","zoneSymbolEventNames$1","wrapFn","event","eventNameSymbol","type","target","this","listener","result","message","filename","lineno","colno","error","preventDefault","apply","arguments","patchProperty","obj","prop","desc","enumerable","configurable","onPropPatchedSymbol","hasOwnProperty","value","originalDescGet","originalDescSet","eventName","newValue","removeEventListener","addEventListener","removeAttribute","patchOnProperties","properties","onProperties","push","j","originalInstanceKey","patchClass","className","OriginalClass","a","Error","attachOriginToPatched","instance","fn","patchMethod","patchFn","proto","delegateName","delegate","patchDelegate","patchMacroTask","funcName","metaCreator","setNative","scheduleTask","task","cbIdx","invoke","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","isIEOrEdge","ua","navigator","userAgent","indexOf","passiveSupported","options","OPTIMIZED_ZONE_EVENT_TASK_DATA","useG","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbol","symbolCapture","patchEventTarget","api","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","invokeTask","isRemoved","handleEvent","originalDelegate","err","once","globalCallback","context","isCapture","tasks","errors","copyTasks","nativeScheduleMicroTask","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","checkDuplicate","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","prepend","isExisting","capture","symbolEventNames","symbolEventName","existingTasks","splice","allRemoved","compare","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","passive","buildEventListenerOptions","signal","aborted","zone","constructorName","constructor","targetSource","scheduleEventTask","cancelTask","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","exec","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","patchEventPrototype","Event","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","handleId","clearTask","isPeriodic","delay","handle","ref","unref","bind","id","state","cancelFn","runCount","filterProperties","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","getOnEventNames","getOwnPropertyNames","startsWith","map","substring","patchCallbacks","targetName","method","callbacks","nativeDelegate","opts","forEach","descriptor","_redefineProperty","Zone$1","loadZone","_global$_Zone","initZone","performance","mark","performanceMeasure","label","measure","ZoneImpl","assertZonePatched","Promise","patches","ZoneAwarePromise","root","parent","_currentZoneFrame","currentTask","_currentTask","__load_patch","ignoreDuplicate","perfName","_api","_parent","_name","zoneSpec","_properties","_zoneDelegate","_ZoneDelegate","key","getZoneWith","fork","_callback","intercept","runGuarded","run","applyThis","applyArgs","handleError","runTask","NO_ZONE","notScheduled","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","previousTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleMicroTask","ZoneTask","microTask","canceling","count","_ZoneImpl","DELEGATE_ZS","onHasTask","_","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","returnTask","scheduleFn","isEmpty","counts","prev","next","change","_state","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toJSON","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","func","resolve","nativeThen","then","queue","onUnhandledError","microtaskDrainDone","currentZoneFrame","noop","showUncaughtError","patchThen","getGlobalObjects","patchCommon","patchPromise","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","creationTrace","e","rejection","console","stack","uncaughtPromiseError","shift","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","forwardResolution","forwardRejection","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","REJECTED_NO_CATCH","makeResolver","promise","v","resolvePromise","wasCalled","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","trace","scheduleResolveOrReject","readableObjectToString","JSON","stringify","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","AggregateError","withResolvers","res","rej","any","values","Symbol","iterator","promises","finished","race","onResolve","onReject","all","allWithCallback","allSettled","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","species","_this$constructor","C","catch","finally","onFinally","_this$constructor2","NativePromise","symbolThenPatched","Ctor","originalThen","zoneify","resultPromise","ctor","patchToString","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","nativePromise","nativeError","originalObjectToString","patchUtil","eventNames","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","patchBrowser","legacyPatch","clear","blockingMethods","s","patchEvent","eventTargetPatch","EVENT_TARGET","EventTarget","XMLHttpRequestEventTarget","propertyDescriptorPatch","__Zone_ignore_on_properties","patchTargets","ignoreErrorProperties","isIE","patchCustomElements","customElements","patchXHR","XMLHttpRequest","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","findPendingTask","geolocation","patchPrototype","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt","patchQueueMicrotask"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/zone-flags.ts","./node_modules/zone.js/fesm2015/zone.js"],"sourcesContent":["/**\n * Prevents Angular change detection from\n * running with certain Web Component callbacks\n */\n// eslint-disable-next-line no-underscore-dangle\n(window as any).__Zone_disable_customElements = true;\n","'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\nconst global = globalThis;\n// __Zone_symbol_prefix global can be used to override the default zone\n// symbol prefix with a custom one if needed.\nfunction __symbol__(name) {\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    return symbolPrefix + name;\n}\nfunction initZone() {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    class ZoneImpl {\n        // tslint:disable-next-line:require-internal-with-underscore\n        static { this.__symbol__ = __symbol__; }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = ZoneImpl.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, ZoneImpl, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = (zoneSpec && zoneSpec.properties) || {};\n            this._zoneDelegate = new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task),\n    };\n    class _ZoneDelegate {\n        get zone() {\n            return this._zone;\n        }\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = {\n                'microTask': 0,\n                'macroTask': 0,\n                'eventTask': 0,\n            };\n            this._zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this._zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this._zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this._zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this._zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this._zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this._zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this._zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = this._zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this._zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS\n                ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec)\n                : new ZoneImpl(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS\n                ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source)\n                : callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS\n                ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source)\n                : callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS\n                ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error)\n                : true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS\n                ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs)\n                : task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = (counts[type] = prev + count);\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type,\n                };\n                this.hasTask(this._zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? \" or '\" + fromState2 + \"'\" : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount,\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !ZoneImpl[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask,\n    };\n    let _currentZoneFrame = { parent: null, zone: new ZoneImpl(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return ZoneImpl;\n}\n\nfunction loadZone() {\n    // if global['Zone'] already exists (maybe zone.js was already loaded or\n    // some other lib also registered a global object named Zone), we may need\n    // to throw an error, but sometimes user may not want this error.\n    // For example,\n    // we have two web pages, page1 includes zone.js, page2 doesn't.\n    // and the 1st time user load page1 and page2, everything work fine,\n    // but when user load page2 again, error occurs because global['Zone'] already exists.\n    // so we add a flag to let user choose whether to throw this error or not.\n    // By default, if existing Zone is from zone.js, we will not throw the error.\n    const global = globalThis;\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone'] && (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function')) {\n        throw new Error('Zone already loaded.');\n    }\n    // Initialize global `Zone` constant.\n    global['Zone'] ??= initZone();\n    return global['Zone'];\n}\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = __symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = __symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = __symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = __symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = (isWindowExists && internalWindow) || globalThis;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = !('nw' in _global) &&\n    typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]';\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' &&\n    !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result =\n            listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    },\n                });\n            }\n        })(prop);\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) { }\n    return ieOrEdge;\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            },\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true,\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = (proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER]);\n        const nativeRemoveEventListener = (proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER]);\n        const nativeListeners = (proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER]);\n        const nativeRemoveAllListeners = (proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER]);\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return ((typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate));\n        };\n        const compare = patchOptions && patchOptions.diff ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                const signal = options &&\n                    typeof options === 'object' &&\n                    options.signal &&\n                    typeof options.signal === 'object'\n                    ? options.signal\n                    : undefined;\n                if (signal?.aborted) {\n                    // the signal is an aborted one, just return without attaching the event listener.\n                    return;\n                }\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source =\n                        constructorName +\n                            addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                if (signal) {\n                    // if addEventListener with signal options, we don't pass it to\n                    // native addEventListener, instead we keep the signal setting\n                    // and handle ourselves.\n                    taskData.options.signal = undefined;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                if (signal) {\n                    // after task is scheduled, we need to store the signal back to task.options\n                    taskData.options.signal = signal;\n                    nativeListener.call(signal, 'abort', () => {\n                        task.zone.cancelTask(task);\n                    }, { once: true });\n                }\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates with capture=false were removed\n                            // https:// github.com/angular/angular/issues/31643\n                            // https://github.com/angular/angular/issues/54581\n                            if (!capture && typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks\n            ? captureFalseTasks.concat(captureTrueTasks)\n            : captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n    api.patchMethod(global, 'queueMicrotask', (delegate) => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative = patchMethod(window, setName, (delegate) => function (self, args) {\n        if (typeof args[0] === 'function') {\n            const options = {\n                isPeriodic: nameSuffix === 'Interval',\n                delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n                args: args,\n            };\n            const callback = args[0];\n            args[0] = function timer() {\n                try {\n                    return callback.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    // https://github.com/angular/angular/issues/40387\n                    // Cleanup tasksByHandleId should be handled before scheduleTask\n                    // Since some zoneSpec may intercept and doesn't trigger\n                    // scheduleFn(scheduleTask) provided here.\n                    if (!options.isPeriodic) {\n                        if (typeof options.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[options.handleId];\n                        }\n                        else if (options.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            options.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            };\n            const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n            if (!task) {\n                return task;\n            }\n            // Node.js must additionally support the ref and unref functions.\n            const handle = task.data.handleId;\n            if (typeof handle === 'number') {\n                // for non nodejs env, we save handleId: task\n                // mapping in local cache for clearTimeout\n                tasksByHandleId[handle] = task;\n            }\n            else if (handle) {\n                // for nodejs env, we save task\n                // reference in timerId Object for clearTimeout\n                handle[taskSymbol] = task;\n            }\n            // check whether handle is null, because some polyfill or browser\n            // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n            if (handle &&\n                handle.ref &&\n                handle.unref &&\n                typeof handle.ref === 'function' &&\n                typeof handle.unref === 'function') {\n                task.ref = handle.ref.bind(handle);\n                task.unref = handle.unref.bind(handle);\n            }\n            if (typeof handle === 'number' || handle) {\n                return handle;\n            }\n            return task;\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(window, args);\n        }\n    });\n    clearNative = patchMethod(window, cancelName, (delegate) => function (self, args) {\n        const id = args[0];\n        let task;\n        if (typeof id === 'number') {\n            // non nodejs env.\n            task = tasksByHandleId[id];\n        }\n        else {\n            // nodejs env.\n            task = id && id[taskSymbol];\n            // other environments.\n            if (!task) {\n                task = id;\n            }\n        }\n        if (task && typeof task.type === 'string') {\n            if (task.state !== 'notScheduled' &&\n                ((task.cancelFn && task.data.isPeriodic) || task.runCount === 0)) {\n                if (typeof id === 'number') {\n                    delete tasksByHandleId[id];\n                }\n                else if (id) {\n                    id[taskSymbol] = null;\n                }\n                // Do not cancel already canceled functions\n                task.zone.cancelTask(task);\n            }\n        }\n        else {\n            // cause an error by calling it directly.\n            delegate.apply(window, args);\n        }\n    });\n}\n\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-lifecycle-callbacks\n    const callbacks = [\n        'connectedCallback',\n        'disconnectedCallback',\n        'adoptedCallback',\n        'attributeChangedCallback',\n        'formAssociatedCallback',\n        'formDisabledCallback',\n        'formResetCallback',\n        'formStateRestoreCallback',\n    ];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter((ip) => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter((op) => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter((name) => name.startsWith('on') && name.length > 2)\n        .map((name) => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document',\n            'SVGElement',\n            'Element',\n            'HTMLElement',\n            'HTMLBodyElement',\n            'HTMLMediaElement',\n            'HTMLFrameSetElement',\n            'HTMLFrameElement',\n            'HTMLIFrameElement',\n            'HTMLMarqueeElement',\n            'Worker',\n        ]);\n        const ignoreErrorProperties = isIE()\n            ? [{ target: internalWindow, ignoreProperties: ['error'] }]\n            : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest',\n        'XMLHttpRequestEventTarget',\n        'IDBIndex',\n        'IDBRequest',\n        'IDBOpenDBRequest',\n        'IDBDatabase',\n        'IDBTransaction',\n        'IDBCursor',\n        'WebSocket',\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target &&\n            target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchBrowser(Zone) {\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n        }\n    });\n    Zone.__load_patch('MutationObserver', (global, Zone, api) => {\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n    });\n    Zone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n        patchClass('IntersectionObserver');\n    });\n    Zone.__load_patch('FileReader', (global, Zone, api) => {\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) {\n                return target[XHR_TASK];\n            }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = (target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            // Also if the request failed without response (status = 0), the load event handler\n                            // will not be triggered, in that case, we should also invoke the placeholder callback\n                            // to close the XMLHttpRequest::send macroTask.\n                            // https://github.com/angular/angular/issues/38795\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                });\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = {\n                        target: self,\n                        url: self[XHR_URL],\n                        isPeriodic: false,\n                        args: args,\n                        aborted: false,\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self &&\n                        self[XHR_ERROR_BEFORE_SCHEDULED] === true &&\n                        !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach((eventTask) => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, {\n                            promise: e.promise,\n                            reason: e.rejection,\n                        });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n    Zone.__load_patch('queueMicrotask', (global, Zone, api) => {\n        patchQueueMicrotask(global, api);\n    });\n}\n\nfunction patchPromise(Zone) {\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => {\n                        if (uncaughtPromiseError.throwOriginal) {\n                            throw uncaughtPromiseError.rejection;\n                        }\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) { }\n        }\n        function isThenable(value) {\n            return value && value.then;\n        }\n        function forwardResolution(value) {\n            return value;\n        }\n        function forwardRejection(rejection) {\n            return ZoneAwarePromise.reject(rejection);\n        }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED &&\n                    value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) &&\n                    value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => {\n                            resolvePromise(promise, false, err);\n                        })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask &&\n                            Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, {\n                                configurable: true,\n                                enumerable: false,\n                                writable: true,\n                                value: trace,\n                            });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        try {\n                            // Here we throws a new Error to print more readable error log\n                            // and if the value is not an error, zone.js builds an `Error`\n                            // Object here to attach the stack information.\n                            throw new Error('Uncaught (in promise): ' +\n                                readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            uncaughtPromiseError = err;\n                        }\n                        if (isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // use the value instead of wrapping it.\n                            uncaughtPromiseError.throwOriginal = true;\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) { }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState\n                ? typeof onFulfilled === 'function'\n                    ? onFulfilled\n                    : forwardResolution\n                : typeof onRejected === 'function'\n                    ? onRejected\n                    : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution\n                        ? []\n                        : [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        const AggregateError = global.AggregateError;\n        class ZoneAwarePromise {\n            static toString() {\n                return ZONE_AWARE_PROMISE_TO_STRING;\n            }\n            static resolve(value) {\n                if (value instanceof ZoneAwarePromise) {\n                    return value;\n                }\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static withResolvers() {\n                const result = {};\n                result.promise = new ZoneAwarePromise((res, rej) => {\n                    result.resolve = res;\n                    result.reject = rej;\n                });\n                return result;\n            }\n            static any(values) {\n                if (!values || typeof values[Symbol.iterator] !== 'function') {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                const promises = [];\n                let count = 0;\n                try {\n                    for (let v of values) {\n                        count++;\n                        promises.push(ZoneAwarePromise.resolve(v));\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                if (count === 0) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                let finished = false;\n                const errors = [];\n                return new ZoneAwarePromise((resolve, reject) => {\n                    for (let i = 0; i < promises.length; i++) {\n                        promises[i].then((v) => {\n                            if (finished) {\n                                return;\n                            }\n                            finished = true;\n                            resolve(v);\n                        }, (err) => {\n                            errors.push(err);\n                            count--;\n                            if (count === 0) {\n                                finished = true;\n                                reject(new AggregateError(errors, 'All promises were rejected'));\n                            }\n                        });\n                    }\n                });\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) {\n                    resolve(value);\n                }\n                function onReject(error) {\n                    reject(error);\n                }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) {\n                return ZoneAwarePromise.allWithCallback(values);\n            }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err }),\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    const onceWrapper = once();\n                    executor &&\n                        executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() {\n                return 'Promise';\n            }\n            get [Symbol.species]() {\n                return ZoneAwarePromise;\n            }\n            then(onFulfilled, onRejected) {\n                // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n                // may be an object without a prototype (created through `Object.create(null)`); thus\n                // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n                // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n                // object and copies promise properties into that object (within the `getOrCreateLoad`\n                // function). The zone.js then checks if the resolved value has the `then` method and\n                // invokes it with the `value` context. Otherwise, this will throw an error: `TypeError:\n                // Cannot read properties of undefined (reading 'Symbol(Symbol.species)')`.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = (global[symbolPromise] = global['Promise']);\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                    originalThen.call(this, resolve, reject);\n                });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function (self, args) {\n                let resultPromise = fn.apply(self, args);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            patchMethod(global, 'fetch', (delegate) => zoneify(delegate));\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n}\n\nfunction patchToString(Zone) {\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (typeof Promise === 'function' && this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = (target[symbol] = target[method]);\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\nfunction patchUtil(Zone) {\n    Zone.__load_patch('util', (global, Zone, api) => {\n        // Collect native event names by looking at properties\n        // on the global namespace, e.g. 'onclick'.\n        const eventNames = getOnEventNames(global);\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS`\n        // to define which events will not be patched by `Zone.js`. In newer version (>=0.9.0), we\n        // change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep the name consistent with\n        // angular repo. The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be\n        // supported for backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({\n            globalSources,\n            zoneSymbolEventNames,\n            eventNames,\n            isBrowser,\n            isMix,\n            isNode,\n            TRUE_STR,\n            FALSE_STR,\n            ZONE_SYMBOL_PREFIX,\n            ADD_EVENT_LISTENER_STR,\n            REMOVE_EVENT_LISTENER_STR,\n        });\n    });\n}\n\nfunction patchCommon(Zone) {\n    patchPromise(Zone);\n    patchToString(Zone);\n    patchUtil(Zone);\n}\n\nconst Zone$1 = loadZone();\npatchCommon(Zone$1);\npatchBrowser(Zone$1);\n"],"x_google_ignoreList":[1]}