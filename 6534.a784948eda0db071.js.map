{"version":3,"file":"6534.a784948eda0db071.js","mappings":"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","names":["isDayDisabled","refParts","minParts","maxParts","dayValues","day","undefined","includes","isBefore","isAfter","isMonthDisabled","isYearDisabled","refYear","year","warnIfTimeZoneProvided","el","formatOptions","_a","_b","_c","_d","date","timeZone","timeZoneName","time","printIonWarning","checkForPresentationFormatMismatch","presentation","Datetime","constructor","hostRef","_this","this","registerInstance","ionCancel","createEvent","ionChange","ionValueChange","ionFocus","ionBlur","ionStyle","ionRender","inputId","datetimeIds","prevPresentation","warnIfIncorrectValueUsage","multiple","value","Array","isArray","map","v","join","setValue","emit","getActivePartsWithFallback","defaultParts","getActivePart","activeParts","closeParentOverlay","popoverOrModal","closest","dismiss","setWorkingParts","parts","workingParts","Object","assign","setActiveParts","removeDate","readonly","validatedParts","validateParts","activePartsArray","filter","p","isSameDay","querySelector","showDefaultButtons","confirm","initializeKeyboardListeners","calendarBodyRef","root","shadowRoot","currentMonth","mo","MutationObserver","ev","oldValue","classList","contains","focusWorkingDay","observe","attributeFilter","attributeOldValue","destroyKeyboardMO","disconnect","addEventListener","activeElement","getPartsFromCalendarDay","partsToFocus","key","preventDefault","getNextWeek","getPreviousWeek","getNextDay","getPreviousDay","getStartOfWeek","getEndOfWeek","shiftKey","getPreviousYear","getPreviousMonth","getNextYear","getNextMonth","requestAnimationFrame","padding","querySelectorAll","dayEl","length","focus","processMinParts","min","parseMinParts","processMaxParts","max","parseMaxParts","initializeCalendarListener","months","startMonth","workingMonth","endMonth","needsiOSRubberBandFix","getIonMode","navigator","maxTouchPoints","writeTask","scrollLeft","clientWidth","isRTL","getChangedMonth","box","getBoundingClientRect","month","monthBox","Math","abs","x","forceRenderDate","updateActiveMonth","style","removeProperty","appliediOSRubberBandFix","newDate","setProperty","resolveForceDateScrolling","scrollTimeout","scrollCallback","clearTimeout","setTimeout","destroyCalendarListener","removeEventListener","destroyInteractionListeners","processValue","hasValue","valueToProcess","parseDate","warnIfValueOutOfBounds","singleValue","targetValue","clampDate","hour","minute","ampm","parseAmPm","didChangeMonth","bodyIsVisible","isGridStyle","showMonthAndYear","areAllSelectedDatesInSameMonth","firstMonth","animateToDate","_ref","_asyncToGenerator","forceDateScrollingPromise","Promise","resolve","targetMonthIsBefore","prevMonth","nextMonth","_x","apply","arguments","onFocus","onBlur","scrollTo","top","left","offsetWidth","behavior","toggleMonthAndYearView","isTimePopoverOpen","color","name","disabled","isDateEnabled","cancelText","doneText","clearText","yearValues","monthValues","hourValues","minuteValues","locale","firstDayOfWeek","titleSelectedDatesFormatter","highlightedDates","showDefaultTitle","showClearButton","showDefaultTimeLabel","hourCycle","size","preferWheel","formatOptionsChanged","disabledChanged","emitStyle","minChanged","maxChanged","presentationChanged","yearValuesChanged","parsedYearValues","convertToArrayOfNumbers","monthValuesChanged","parsedMonthValues","dayValuesChanged","parsedDayValues","hourValuesChanged","parsedHourValues","minuteValuesChanged","parsedMinuteValues","valueChanged","_this2","closeOverlay","_this3","isCalendarPicker","convertDataToISO","reset","startDate","_this4","cancel","_this5","connectedCallback","clearFocusVisible","startFocusVisible","destroy","disconnectedCallback","initializeListeners","componentDidLoad","intersectionTrackerRef","visibleIO","IntersectionObserver","entries","isIntersecting","add","threshold","raf","hiddenIO","remove","getElementRoot","stopPropagation","componentDidRender","hasCalendarGrid","componentWillLoad","todayParts","getToday","getClosestValidDate","interactive","datetime","renderFooter","isButtonDisabled","clearButtonClick","h","class","id","onClick","renderWheelPicker","forcePresentation","renderArray","renderTimePickerColumns","renderDatePickerColumns","renderCombinedDatePickerColumn","renderIndividualDatePickerColumns","activePart","monthsToRender","generateMonths","lastMonth","getNumDaysInMonth","result","getCombinedDateColumnData","items","itemObject","index","referenceParts","e","printIonError","onIonChange","detail","findPart","find","getMonthColumnData","days","getDayColumnData","dayObject","valueNum","parseInt","years","getYearColumnData","showMonthFirst","isMonthFirstLocale","renderMonthPickerColumn","renderDayPickerColumn","renderYearPickerColumn","userHasSelectedDate","hoursData","minutesData","dayPeriodData","getTimeColumnsData","renderHourPickerColumn","renderMinutePickerColumn","renderDayPeriodPickerColumn","numericInput","isDayPeriodRTL","isLocaleDayPeriodRTL","order","calculateHourFromAMPM","renderWheelView","columnOrder","renderCalendarHeader","mode","expandedIcon","chevronDown","caretUpSharp","collapsedIcon","chevronForward","caretDownSharp","prevMonthDisabled","isPrevMonthDisabled","nextMonthDisabled","isNextMonthDisabled","hostDir","getAttribute","part","ref","monthYearToggleItemRef","button","lines","btn","setAttribute","getMonthAndYear","icon","lazy","flipRtl","dir","slot","chevronBack","getDaysOfWeek","d","renderMonth","yearAllowed","monthAllowed","isCalMonthDisabled","isDatetimeDisabled","swipeDisabled","isWorkingMonth","getDaysOfMonth","dateObject","dayOfWeek","isCalendarPadding","isActive","isToday","ariaLabel","ariaSelected","text","getCalendarDayState","generateDayAriaLabel","getDay","dateIsoString","isCalDayDisabled","isCalDayConstrained","dateStyle","dateParts","getHighlightStyles","dateStringWithoutTime","split","matchingHighlight","hd","textColor","backgroundColor","tabindex","renderCalendarBody","renderCalendar","renderTimeLabel","renderTimeOverlay","_this6","computedHourCycle","getHourCycle","_ref2","popoverRef","present","CustomEvent","ionShadowTarget","target","onWillDismiss","_x2","getLocalizedTime","alignment","translucent","overlayIndex","arrow","onWillPresent","forEach","col","scrollActiveItemIntoView","keyboardEvents","getHeaderSelectedDateText","headerText","getLocalizedDateTime","weekday","renderHeader","showExpandedHeader","renderTime","renderCalendarViewMonthYearPicker","renderDatetime","render","isMonthAndYearPresentation","shouldShowMonthAndYear","monthYearPickerOpen","hasWheelVariant","renderHiddenInput","formatValue","Host","createColorClasses","u","getElement","watchers","ios","md","iosEnterAnimation","baseEl","baseAnimation","createAnimation","backdropAnimation","wrapperAnimation","addElement","fromTo","beforeStyles","afterClearStyles","easing","duration","addAnimation","iosLeaveAnimation","Picker","didPresent","willPresent","willDismiss","didDismiss","didPresentShorthand","willPresentShorthand","willDismissShorthand","didDismissShorthand","delegateController","createDelegateController","lockController","createLockController","triggerController","createTriggerController","onBackdropTap","BACKDROP","dispatchCancelHandler","isCancel","role","cancelButton","buttons","b","callButtonHandler","presented","delegate","hasController","keyboardClose","enterAnimation","leaveAnimation","columns","cssClass","showBackdrop","backdropDismiss","animated","htmlAttributes","isOpen","trigger","onIsOpenChange","newValue","triggerChanged","addClickListener","prepareOverlay","removeClickListener","setOverlayId","_this7","unlock","lock","attachViewToDom","durationTimeout","data","_this8","dismissed","removeViewFromDom","onDidDismiss","eventMethod","getColumn","column","buttonClick","_this9","getSelected","_this10","safeCall","handler","selected","selectedColumn","selectedIndex","options","columnIndex","zIndex","i","getClassMap","onIonBackdropTap","onIonPickerWillDismiss","visible","tappable","buttonWrapperClass","type","buttonClass","c","PickerColumnCmp","ionPickerColChange","optHeight","rotateFactor","scaleFactor","velocity","y","noAnimate","colDidChange","colChanged","_this11","pickerRotateFactor","pickerScaleFactor","gesture","then","__webpack_require__","bind","createGesture","gestureName","gesturePriority","passive","onStart","onMove","onEnd","enable","tmrId","refresh","onDomChange","componentDidUpdate","rafId","cancelAnimationFrame","emitColChange","setSelected","update","saveY","optsEl","translateY","translateZ","prevSelected","indexForY","durationStr","scaleStr","children","opt","optOffset","transform","rotateX","transitionDuration","PICKER_OPT_SELECTED","lastIndex","hapticSelectionChanged","decelerate","DECELERATION_FRICTION","minY","maxY","round","hapticSelectionEnd","currentPos","event","cancelable","hapticSelectionStart","deltaY","pow","bounceFrom","clamp","MAX_PICKER_SPEED","velocityY","hasAttribute","TRANSITION_DURATION","isScrollingUp","optHeightFraction","forceRefresh","colEl","firstElementChild","clientHeight","align","columnWidth","prefix","width","prefixWidth","maxWidth","optionsWidth","o","suffix","suffixWidth"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-datetime_3.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, w as writeTask, h, H as Host, f as getElement } from './index-a1a47f01.js';\nimport { startFocusVisible } from './focus-visible-dd40d69f.js';\nimport { r as raf, d as renderHiddenInput, g as getElementRoot, l as clamp } from './helpers-be245865.js';\nimport { a as printIonError, p as printIonWarning } from './index-9b0d46f4.js';\nimport { i as isRTL } from './dir-babeabeb.js';\nimport { c as createColorClasses, g as getClassMap } from './theme-01f3f29c.js';\nimport { c as chevronBack, o as chevronForward, l as chevronDown, p as caretUpSharp, q as caretDownSharp } from './index-f7dc70ba.js';\nimport { b as getIonMode } from './ionic-global-94f25d1b.js';\nimport { g as generateDayAriaLabel, a as getDay, i as isBefore, b as isAfter, c as isSameDay, d as getPreviousMonth, e as getNextMonth, v as validateParts, f as getPartsFromCalendarDay, h as getNextYear, j as getPreviousYear, k as getEndOfWeek, l as getStartOfWeek, m as getPreviousDay, n as getNextDay, o as getPreviousWeek, p as getNextWeek, q as parseMinParts, r as parseMaxParts, s as parseDate, w as warnIfValueOutOfBounds, t as convertToArrayOfNumbers, u as convertDataToISO, x as getToday, y as getClosestValidDate, z as generateMonths, A as getNumDaysInMonth, B as getCombinedDateColumnData, C as getMonthColumnData, D as getDayColumnData, E as getYearColumnData, F as isMonthFirstLocale, G as getTimeColumnsData, H as isLocaleDayPeriodRTL, I as getDaysOfWeek, J as getMonthAndYear, K as getDaysOfMonth, L as getHourCycle, M as getLocalizedTime, N as getLocalizedDateTime, O as formatValue, P as clampDate, Q as parseAmPm, R as calculateHourFromAMPM } from './data-bb424ba8.js';\nimport { c as createLockController } from './lock-controller-316928be.js';\nimport { d as createDelegateController, e as createTriggerController, B as BACKDROP, i as isCancel, j as prepareOverlay, k as setOverlayId, f as present, g as dismiss, h as eventMethod, s as safeCall } from './overlays-b874c3c3.js';\nimport { c as createAnimation } from './animation-6a0c5338.js';\nimport { b as hapticSelectionChanged, h as hapticSelectionEnd, a as hapticSelectionStart } from './haptic-554688a5.js';\nimport './index-a5d50daf.js';\nimport './hardware-back-button-6107a37c.js';\nimport './framework-delegate-ed4ba327.js';\nimport './capacitor-59395cbd.js';\n\nconst isYearDisabled = (refYear, minParts, maxParts) => {\n    if (minParts && minParts.year > refYear) {\n        return true;\n    }\n    if (maxParts && maxParts.year < refYear) {\n        return true;\n    }\n    return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nconst isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n    /**\n     * If this is a filler date (i.e. padding)\n     * then the date is disabled.\n     */\n    if (refParts.day === null) {\n        return true;\n    }\n    /**\n     * If user passed in a list of acceptable day values\n     * check to make sure that the date we are looking\n     * at is in this array.\n     */\n    if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n        return true;\n    }\n    /**\n     * Given a min date, perform the following\n     * checks. If any of them are true, then the\n     * day should be disabled:\n     * 1. Is the current year < the min allowed year?\n     * 2. Is the current year === min allowed year,\n     * but the current month < the min allowed month?\n     * 3. Is the current year === min allowed year, the\n     * current month === min allow month, but the current\n     * day < the min allowed day?\n     */\n    if (minParts && isBefore(refParts, minParts)) {\n        return true;\n    }\n    /**\n     * Given a max date, perform the following\n     * checks. If any of them are true, then the\n     * day should be disabled:\n     * 1. Is the current year > the max allowed year?\n     * 2. Is the current year === max allowed year,\n     * but the current month > the max allowed month?\n     * 3. Is the current year === max allowed year, the\n     * current month === max allow month, but the current\n     * day > the max allowed day?\n     */\n    if (maxParts && isAfter(refParts, maxParts)) {\n        return true;\n    }\n    /**\n     * If none of these checks\n     * passed then the date should\n     * be interactive.\n     */\n    return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\nconst getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n    /**\n     * activeParts signals what day(s) are currently selected in the datetime.\n     * If multiple=\"true\", this will be an array, but the logic in this util\n     * is the same whether we have one selected day or many because we're only\n     * calculating the state for one button. So, we treat a single activeParts value\n     * the same as an array of length one.\n     */\n    const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n    /**\n     * The day button is active if it is selected, or in other words, if refParts\n     * matches at least one selected date.\n     */\n    const isActive = activePartsArray.find((parts) => isSameDay(refParts, parts)) !== undefined;\n    const isToday = isSameDay(refParts, todayParts);\n    const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n    /**\n     * Note that we always return one object regardless of whether activeParts\n     * was an array, since we pare down to one value for isActive.\n     */\n    return {\n        disabled,\n        isActive,\n        isToday,\n        ariaSelected: isActive ? 'true' : null,\n        ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n        text: refParts.day != null ? getDay(locale, refParts) : null,\n    };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\nconst isMonthDisabled = (refParts, { minParts, maxParts, }) => {\n    // If the year is disabled then the month is disabled.\n    if (isYearDisabled(refParts.year, minParts, maxParts)) {\n        return true;\n    }\n    // If the date value is before the min date, then the month is disabled.\n    // If the date value is after the max date, then the month is disabled.\n    if ((minParts && isBefore(refParts, minParts)) || (maxParts && isAfter(refParts, maxParts))) {\n        return true;\n    }\n    return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\nconst isPrevMonthDisabled = (refParts, minParts, maxParts) => {\n    const prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), { day: null });\n    return isMonthDisabled(prevMonth, {\n        minParts,\n        maxParts,\n    });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\nconst isNextMonthDisabled = (refParts, maxParts) => {\n    const nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), { day: null });\n    return isMonthDisabled(nextMonth, {\n        maxParts,\n    });\n};\n/**\n * Given the value of the highlightedDates property\n * and an ISO string, return the styles to use for\n * that date, or undefined if none are found.\n */\nconst getHighlightStyles = (highlightedDates, dateIsoString, el) => {\n    if (Array.isArray(highlightedDates)) {\n        const dateStringWithoutTime = dateIsoString.split('T')[0];\n        const matchingHighlight = highlightedDates.find((hd) => hd.date === dateStringWithoutTime);\n        if (matchingHighlight) {\n            return {\n                textColor: matchingHighlight.textColor,\n                backgroundColor: matchingHighlight.backgroundColor,\n            };\n        }\n    }\n    else {\n        /**\n         * Wrap in a try-catch to prevent exceptions in the user's function\n         * from interrupting the calendar's rendering.\n         */\n        try {\n            return highlightedDates(dateIsoString);\n        }\n        catch (e) {\n            printIonError('Exception thrown from provided `highlightedDates` callback. Please check your function and try again.', el, e);\n        }\n    }\n    return undefined;\n};\n\n/**\n * If a time zone is provided in the format options, the rendered text could\n * differ from what was selected in the Datetime, which could cause\n * confusion.\n */\nconst warnIfTimeZoneProvided = (el, formatOptions) => {\n    var _a, _b, _c, _d;\n    if (((_a = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) === null || _a === void 0 ? void 0 : _a.timeZone) ||\n        ((_b = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) === null || _b === void 0 ? void 0 : _b.timeZoneName) ||\n        ((_c = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time) === null || _c === void 0 ? void 0 : _c.timeZone) ||\n        ((_d = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time) === null || _d === void 0 ? void 0 : _d.timeZoneName)) {\n        printIonWarning('Datetime: \"timeZone\" and \"timeZoneName\" are not supported in \"formatOptions\".', el);\n    }\n};\nconst checkForPresentationFormatMismatch = (el, presentation, formatOptions) => {\n    // formatOptions is not required\n    if (!formatOptions)\n        return;\n    // If formatOptions is provided, the date and/or time objects are required, depending on the presentation\n    switch (presentation) {\n        case 'date':\n        case 'month-year':\n        case 'month':\n        case 'year':\n            if (formatOptions.date === undefined) {\n                printIonWarning(`Datetime: The '${presentation}' presentation requires a date object in formatOptions.`, el);\n            }\n            break;\n        case 'time':\n            if (formatOptions.time === undefined) {\n                printIonWarning(`Datetime: The 'time' presentation requires a time object in formatOptions.`, el);\n            }\n            break;\n        case 'date-time':\n        case 'time-date':\n            if (formatOptions.date === undefined && formatOptions.time === undefined) {\n                printIonWarning(`Datetime: The '${presentation}' presentation requires either a date or time object (or both) in formatOptions.`, el);\n            }\n            break;\n    }\n};\n\nconst datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{position:absolute;visibility:hidden;pointer-events:none}@supports (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{inset-inline-start:-99999px}}@supports not (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}@supports selector(:dir(rtl)){:host(.show-month-and-year:dir(rtl)) .calendar-next-prev,:host(.show-month-and-year:dir(rtl)) .calendar-days-of-week,:host(.show-month-and-year:dir(rtl)) .calendar-body,:host(.show-month-and-year:dir(rtl)) .datetime-time{left:unset;right:unset;right:-99999px}}}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled) .calendar-days-of-week,:host(.datetime-disabled) .datetime-time{opacity:0.4}:host(.datetime-readonly){pointer-events:none;}:host(.datetime-readonly) .calendar-action-buttons,:host(.datetime-readonly) .calendar-body,:host(.datetime-readonly) .datetime-year{pointer-events:initial}:host(.datetime-readonly) .calendar-day[disabled]:not(.calendar-day-constrained),:host(.datetime-readonly) .datetime-action-buttons ion-button[disabled]{opacity:1}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.datetime-action-buttons .datetime-action-buttons-container{display:-ms-flexbox;display:flex}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:auto}:host .calendar-action-buttons ion-item ion-icon{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0;padding-top:0;padding-bottom:0}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}.calendar-days-of-week .day-of-week{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:0;min-height:0;overflow:visible}.calendar-day{border-radius:50%;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px;padding-top:0px;padding-bottom:0px;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day:focus{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-light, #ffffff);--background-rgb:var(--ion-color-light-rgb);--title-color:var(--ion-color-step-600, #666666)}:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),:host(.datetime-presentation-date:not(.datetime-prefer-wheel)){min-height:350px}:host .datetime-header{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, #cccccc);font-size:min(0.875rem, 22.4px)}:host .datetime-header .datetime-title{color:var(--title-color)}:host .datetime-header .datetime-selected-date{margin-top:10px}:host .calendar-action-buttons ion-item{--padding-start:16px;--background-hover:transparent;--background-activated:transparent;font-size:min(1rem, 25.6px);font-weight:600}:host .calendar-action-buttons ion-item ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, #b3b3b3);font-size:min(0.75rem, 19.2px);font-weight:600;line-height:24px;text-transform:uppercase}@supports (border-radius: mod(1px, 1px)){.calendar-days-of-week .day-of-week{width:clamp(20px, calc(mod(min(1rem, 24px), 24px) * 10), 100%);height:24px;overflow:hidden}.calendar-day{border-radius:max(8px, mod(min(1rem, 24px), 24px) * 10)}}@supports ((border-radius: mod(1px, 1px)) and (background: -webkit-named-image(apple-pay-logo-black)) and (not (contain-intrinsic-size: none))) or (not (border-radius: mod(1px, 1px))){.calendar-days-of-week .day-of-week{width:auto;height:auto;overflow:initial}.calendar-day{border-radius:32px}}:host .calendar-body .calendar-month .calendar-month-grid{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;-ms-flex-align:center;align-items:center;height:calc(100% - 16px)}:host .calendar-day-wrapper{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;height:0;min-height:1rem}:host .calendar-day{width:40px;min-width:40px;height:40px;font-size:min(1.25rem, 32px)}.calendar-day.calendar-day-active{background:rgba(var(--ion-color-base-rgb), 0.2)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-today.calendar-day-active{background:var(--ion-color-base);color:var(--ion-color-contrast)}:host .datetime-time{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:8px;padding-bottom:16px;font-size:min(1rem, 25.6px)}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, #cccccc)}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\nconst IonDatetimeIosStyle0 = datetimeIosCss;\n\nconst datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{position:absolute;visibility:hidden;pointer-events:none}@supports (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{inset-inline-start:-99999px}}@supports not (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}@supports selector(:dir(rtl)){:host(.show-month-and-year:dir(rtl)) .calendar-next-prev,:host(.show-month-and-year:dir(rtl)) .calendar-days-of-week,:host(.show-month-and-year:dir(rtl)) .calendar-body,:host(.show-month-and-year:dir(rtl)) .datetime-time{left:unset;right:unset;right:-99999px}}}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled) .calendar-days-of-week,:host(.datetime-disabled) .datetime-time{opacity:0.4}:host(.datetime-readonly){pointer-events:none;}:host(.datetime-readonly) .calendar-action-buttons,:host(.datetime-readonly) .calendar-body,:host(.datetime-readonly) .datetime-year{pointer-events:initial}:host(.datetime-readonly) .calendar-day[disabled]:not(.calendar-day-constrained),:host(.datetime-readonly) .datetime-action-buttons ion-button[disabled]{opacity:1}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.datetime-action-buttons .datetime-action-buttons-container{display:-ms-flexbox;display:flex}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:auto}:host .calendar-action-buttons ion-item ion-icon{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0;padding-top:0;padding-bottom:0}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}.calendar-days-of-week .day-of-week{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:0;min-height:0;overflow:visible}.calendar-day{border-radius:50%;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px;padding-top:0px;padding-bottom:0px;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day:focus{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-step-100, #ffffff);--title-color:var(--ion-color-contrast)}:host .datetime-header{-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}:host .datetime-header .datetime-title{font-size:0.75rem;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:2.125rem}:host .datetime-calendar .calendar-action-buttons ion-item{--padding-start:20px}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--color:var(--ion-color-step-650, #595959)}:host .calendar-days-of-week{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, gray);font-size:0.875rem;line-height:36px}:host .calendar-body .calendar-month .calendar-month-grid{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:4px;padding-bottom:4px;grid-template-rows:repeat(6, 1fr)}:host .calendar-day{width:42px;min-width:42px;height:42px;font-size:0.875rem}:host .calendar-day.calendar-day-today{border:1px solid var(--ion-color-base);color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}.calendar-day.calendar-day-active{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:8px;padding-bottom:8px}:host .time-header{color:var(--ion-color-step-650, #595959)}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}\";\nconst IonDatetimeMdStyle0 = datetimeMdCss;\n\nconst Datetime = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionCancel = createEvent(this, \"ionCancel\", 7);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionValueChange = createEvent(this, \"ionValueChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionRender = createEvent(this, \"ionRender\", 7);\n        this.inputId = `ion-dt-${datetimeIds++}`;\n        this.prevPresentation = null;\n        this.warnIfIncorrectValueUsage = () => {\n            const { multiple, value } = this;\n            if (!multiple && Array.isArray(value)) {\n                /**\n                 * We do some processing on the `value` array so\n                 * that it looks more like an array when logged to\n                 * the console.\n                 * Example given ['a', 'b']\n                 * Default toString() behavior: a,b\n                 * Custom behavior: ['a', 'b']\n                 */\n                printIonWarning(`ion-datetime was passed an array of values, but multiple=\"false\". This is incorrect usage and may result in unexpected behaviors. To dismiss this warning, pass a string to the \"value\" property when multiple=\"false\".\n\n  Value Passed: [${value.map((v) => `'${v}'`).join(', ')}]\n`, this.el);\n            }\n        };\n        this.setValue = (value) => {\n            this.value = value;\n            this.ionChange.emit({ value });\n        };\n        /**\n         * Returns the DatetimePart interface\n         * to use when rendering an initial set of\n         * data. This should be used when rendering an\n         * interface in an environment where the `value`\n         * may not be set. This function works\n         * by returning the first selected date and then\n         * falling back to defaultParts if no active date\n         * is selected.\n         */\n        this.getActivePartsWithFallback = () => {\n            var _a;\n            const { defaultParts } = this;\n            return (_a = this.getActivePart()) !== null && _a !== void 0 ? _a : defaultParts;\n        };\n        this.getActivePart = () => {\n            const { activeParts } = this;\n            return Array.isArray(activeParts) ? activeParts[0] : activeParts;\n        };\n        this.closeParentOverlay = () => {\n            const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n            if (popoverOrModal) {\n                popoverOrModal.dismiss();\n            }\n        };\n        this.setWorkingParts = (parts) => {\n            this.workingParts = Object.assign({}, parts);\n        };\n        this.setActiveParts = (parts, removeDate = false) => {\n            /** if the datetime component is in readonly mode,\n             * allow browsing of the calendar without changing\n             * the set value\n             */\n            if (this.readonly) {\n                return;\n            }\n            const { multiple, minParts, maxParts, activeParts } = this;\n            /**\n             * When setting the active parts, it is possible\n             * to set invalid data. For example,\n             * when updating January 31 to February,\n             * February 31 does not exist. As a result\n             * we need to validate the active parts and\n             * ensure that we are only setting valid dates.\n             * Additionally, we need to update the working parts\n             * too in the event that the validated parts are different.\n             */\n            const validatedParts = validateParts(parts, minParts, maxParts);\n            this.setWorkingParts(validatedParts);\n            if (multiple) {\n                const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n                if (removeDate) {\n                    this.activeParts = activePartsArray.filter((p) => !isSameDay(p, validatedParts));\n                }\n                else {\n                    this.activeParts = [...activePartsArray, validatedParts];\n                }\n            }\n            else {\n                this.activeParts = Object.assign({}, validatedParts);\n            }\n            const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n            if (hasSlottedButtons || this.showDefaultButtons) {\n                return;\n            }\n            this.confirm();\n        };\n        this.initializeKeyboardListeners = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            const root = this.el.shadowRoot;\n            /**\n             * Get a reference to the month\n             * element we are currently viewing.\n             */\n            const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n            /**\n             * When focusing the calendar body, we want to pass focus\n             * to the working day, but other days should\n             * only be accessible using the arrow keys. Pressing\n             * Tab should jump between bodies of selectable content.\n             */\n            const checkCalendarBodyFocus = (ev) => {\n                var _a;\n                const record = ev[0];\n                /**\n                 * If calendar body was already focused\n                 * when this fired or if the calendar body\n                 * if not currently focused, we should not re-focus\n                 * the inner day.\n                 */\n                if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n                    return;\n                }\n                this.focusWorkingDay(currentMonth);\n            };\n            const mo = new MutationObserver(checkCalendarBodyFocus);\n            mo.observe(calendarBodyRef, { attributeFilter: ['class'], attributeOldValue: true });\n            this.destroyKeyboardMO = () => {\n                mo === null || mo === void 0 ? void 0 : mo.disconnect();\n            };\n            /**\n             * We must use keydown not keyup as we want\n             * to prevent scrolling when using the arrow keys.\n             */\n            calendarBodyRef.addEventListener('keydown', (ev) => {\n                const activeElement = root.activeElement;\n                if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n                    return;\n                }\n                const parts = getPartsFromCalendarDay(activeElement);\n                let partsToFocus;\n                switch (ev.key) {\n                    case 'ArrowDown':\n                        ev.preventDefault();\n                        partsToFocus = getNextWeek(parts);\n                        break;\n                    case 'ArrowUp':\n                        ev.preventDefault();\n                        partsToFocus = getPreviousWeek(parts);\n                        break;\n                    case 'ArrowRight':\n                        ev.preventDefault();\n                        partsToFocus = getNextDay(parts);\n                        break;\n                    case 'ArrowLeft':\n                        ev.preventDefault();\n                        partsToFocus = getPreviousDay(parts);\n                        break;\n                    case 'Home':\n                        ev.preventDefault();\n                        partsToFocus = getStartOfWeek(parts);\n                        break;\n                    case 'End':\n                        ev.preventDefault();\n                        partsToFocus = getEndOfWeek(parts);\n                        break;\n                    case 'PageUp':\n                        ev.preventDefault();\n                        partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n                        break;\n                    case 'PageDown':\n                        ev.preventDefault();\n                        partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n                        break;\n                    /**\n                     * Do not preventDefault here\n                     * as we do not want to override other\n                     * browser defaults such as pressing Enter/Space\n                     * to select a day.\n                     */\n                    default:\n                        return;\n                }\n                /**\n                 * If the day we want to move focus to is\n                 * disabled, do not do anything.\n                 */\n                if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n                    return;\n                }\n                this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n                /**\n                 * Give view a chance to re-render\n                 * then move focus to the new working day\n                 */\n                requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n            });\n        };\n        this.focusWorkingDay = (currentMonth) => {\n            /**\n             * Get the number of padding days so\n             * we know how much to offset our next selector by\n             * to grab the correct calendar-day element.\n             */\n            const padding = currentMonth.querySelectorAll('.calendar-day-padding');\n            const { day } = this.workingParts;\n            if (day === null) {\n                return;\n            }\n            /**\n             * Get the calendar day element\n             * and focus it.\n             */\n            const dayEl = currentMonth.querySelector(`.calendar-day-wrapper:nth-of-type(${padding.length + day}) .calendar-day`);\n            if (dayEl) {\n                dayEl.focus();\n            }\n        };\n        this.processMinParts = () => {\n            const { min, defaultParts } = this;\n            if (min === undefined) {\n                this.minParts = undefined;\n                return;\n            }\n            this.minParts = parseMinParts(min, defaultParts);\n        };\n        this.processMaxParts = () => {\n            const { max, defaultParts } = this;\n            if (max === undefined) {\n                this.maxParts = undefined;\n                return;\n            }\n            this.maxParts = parseMaxParts(max, defaultParts);\n        };\n        this.initializeCalendarListener = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            /**\n             * For performance reasons, we only render 3\n             * months at a time: The current month, the previous\n             * month, and the next month. We have a scroll listener\n             * on the calendar body to append/prepend new months.\n             *\n             * We can do this because Stencil is smart enough to not\n             * re-create the .calendar-month containers, but rather\n             * update the content within those containers.\n             *\n             * As an added bonus, WebKit has some troubles with\n             * scroll-snap-stop: always, so not rendering all of\n             * the months in a row allows us to mostly sidestep\n             * that issue.\n             */\n            const months = calendarBodyRef.querySelectorAll('.calendar-month');\n            const startMonth = months[0];\n            const workingMonth = months[1];\n            const endMonth = months[2];\n            const mode = getIonMode(this);\n            const needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n            /**\n             * Before setting up the scroll listener,\n             * scroll the middle month into view.\n             * scrollIntoView() will scroll entire page\n             * if element is not in viewport. Use scrollLeft instead.\n             */\n            writeTask(() => {\n                calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n                const getChangedMonth = (parts) => {\n                    const box = calendarBodyRef.getBoundingClientRect();\n                    /**\n                     * If the current scroll position is all the way to the left\n                     * then we have scrolled to the previous month.\n                     * Otherwise, assume that we have scrolled to the next\n                     * month. We have a tolerance of 2px to account for\n                     * sub pixel rendering.\n                     *\n                     * Check below the next line ensures that we did not\n                     * swipe and abort (i.e. we swiped but we are still on the current month).\n                     */\n                    const month = calendarBodyRef.scrollLeft <= 2 ? startMonth : endMonth;\n                    /**\n                     * The edge of the month must be lined up with\n                     * the edge of the calendar body in order for\n                     * the component to update. Otherwise, it\n                     * may be the case that the user has paused their\n                     * swipe or the browser has not finished snapping yet.\n                     * Rather than check if the x values are equal,\n                     * we give it a tolerance of 2px to account for\n                     * sub pixel rendering.\n                     */\n                    const monthBox = month.getBoundingClientRect();\n                    if (Math.abs(monthBox.x - box.x) > 2)\n                        return;\n                    /**\n                     * If we're force-rendering a month, assume we've\n                     * scrolled to that and return it.\n                     *\n                     * If forceRenderDate is ever used in a context where the\n                     * forced month is not immediately auto-scrolled to, this\n                     * should be updated to also check whether `month` has the\n                     * same month and year as the forced date.\n                     */\n                    const { forceRenderDate } = this;\n                    if (forceRenderDate !== undefined) {\n                        return { month: forceRenderDate.month, year: forceRenderDate.year, day: forceRenderDate.day };\n                    }\n                    /**\n                     * From here, we can determine if the start\n                     * month or the end month was scrolled into view.\n                     * If no month was changed, then we can return from\n                     * the scroll callback early.\n                     */\n                    if (month === startMonth) {\n                        return getPreviousMonth(parts);\n                    }\n                    else if (month === endMonth) {\n                        return getNextMonth(parts);\n                    }\n                    else {\n                        return;\n                    }\n                };\n                const updateActiveMonth = () => {\n                    if (needsiOSRubberBandFix) {\n                        calendarBodyRef.style.removeProperty('pointer-events');\n                        appliediOSRubberBandFix = false;\n                    }\n                    /**\n                     * If the month did not change\n                     * then we can return early.\n                     */\n                    const newDate = getChangedMonth(this.workingParts);\n                    if (!newDate)\n                        return;\n                    const { month, day, year } = newDate;\n                    if (isMonthDisabled({ month, year, day: null }, {\n                        minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n                        maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n                    })) {\n                        return;\n                    }\n                    /**\n                     * Prevent scrolling for other browsers\n                     * to give the DOM time to update and the container\n                     * time to properly snap.\n                     */\n                    calendarBodyRef.style.setProperty('overflow', 'hidden');\n                    /**\n                     * Use a writeTask here to ensure\n                     * that the state is updated and the\n                     * correct month is scrolled into view\n                     * in the same frame. This is not\n                     * typically a problem on newer devices\n                     * but older/slower device may have a flicker\n                     * if we did not do this.\n                     */\n                    writeTask(() => {\n                        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month, day: day, year }));\n                        calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n                        calendarBodyRef.style.removeProperty('overflow');\n                        if (this.resolveForceDateScrolling) {\n                            this.resolveForceDateScrolling();\n                        }\n                    });\n                };\n                /**\n                 * When the container finishes scrolling we\n                 * need to update the DOM with the selected month.\n                 */\n                let scrollTimeout;\n                /**\n                 * We do not want to attempt to set pointer-events\n                 * multiple times within a single swipe gesture as\n                 * that adds unnecessary work to the main thread.\n                 */\n                let appliediOSRubberBandFix = false;\n                const scrollCallback = () => {\n                    if (scrollTimeout) {\n                        clearTimeout(scrollTimeout);\n                    }\n                    /**\n                     * On iOS it is possible to quickly rubber band\n                     * the scroll area before the scroll timeout has fired.\n                     * This results in users reaching the end of the scrollable\n                     * container before the DOM has updated.\n                     * By setting `pointer-events: none` we can ensure that\n                     * subsequent swipes do not happen while the container\n                     * is snapping.\n                     */\n                    if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n                        calendarBodyRef.style.setProperty('pointer-events', 'none');\n                        appliediOSRubberBandFix = true;\n                    }\n                    // Wait ~3 frames\n                    scrollTimeout = setTimeout(updateActiveMonth, 50);\n                };\n                calendarBodyRef.addEventListener('scroll', scrollCallback);\n                this.destroyCalendarListener = () => {\n                    calendarBodyRef.removeEventListener('scroll', scrollCallback);\n                };\n            });\n        };\n        /**\n         * Clean up all listeners except for the overlay\n         * listener. This is so that we can re-create the listeners\n         * if the datetime has been hidden/presented by a modal or popover.\n         */\n        this.destroyInteractionListeners = () => {\n            const { destroyCalendarListener, destroyKeyboardMO } = this;\n            if (destroyCalendarListener !== undefined) {\n                destroyCalendarListener();\n            }\n            if (destroyKeyboardMO !== undefined) {\n                destroyKeyboardMO();\n            }\n        };\n        this.processValue = (value) => {\n            const hasValue = value !== null && value !== undefined && (!Array.isArray(value) || value.length > 0);\n            const valueToProcess = hasValue ? parseDate(value) : this.defaultParts;\n            const { minParts, maxParts, workingParts, el } = this;\n            this.warnIfIncorrectValueUsage();\n            /**\n             * Return early if the value wasn't parsed correctly, such as\n             * if an improperly formatted date string was provided.\n             */\n            if (!valueToProcess) {\n                return;\n            }\n            /**\n             * Datetime should only warn of out of bounds values\n             * if set by the user. If the `value` is undefined,\n             * we will default to today's date which may be out\n             * of bounds. In this case, the warning makes it look\n             * like the developer did something wrong which is\n             * not true.\n             */\n            if (hasValue) {\n                warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n            }\n            /**\n             * If there are multiple values, pick an arbitrary one to clamp to. This way,\n             * if the values are across months, we always show at least one of them. Note\n             * that the values don't necessarily have to be in order.\n             */\n            const singleValue = Array.isArray(valueToProcess) ? valueToProcess[0] : valueToProcess;\n            const targetValue = clampDate(singleValue, minParts, maxParts);\n            const { month, day, year, hour, minute } = targetValue;\n            const ampm = parseAmPm(hour);\n            /**\n             * Since `activeParts` indicates a value that\n             * been explicitly selected either by the\n             * user or the app, only update `activeParts`\n             * if the `value` property is set.\n             */\n            if (hasValue) {\n                if (Array.isArray(valueToProcess)) {\n                    this.activeParts = [...valueToProcess];\n                }\n                else {\n                    this.activeParts = {\n                        month,\n                        day,\n                        year,\n                        hour,\n                        minute,\n                        ampm,\n                    };\n                }\n            }\n            else {\n                /**\n                 * Reset the active parts if the value is not set.\n                 * This will clear the selected calendar day when\n                 * performing a clear action or using the reset() method.\n                 */\n                this.activeParts = [];\n            }\n            /**\n             * Only animate if:\n             * 1. We're using grid style (wheel style pickers should just jump to new value)\n             * 2. The month and/or year actually changed, and both are defined (otherwise there's nothing to animate to)\n             * 3. The calendar body is visible (prevents animation when in collapsed datetime-button, for example)\n             * 4. The month/year picker is not open (since you wouldn't see the animation anyway)\n             */\n            const didChangeMonth = (month !== undefined && month !== workingParts.month) || (year !== undefined && year !== workingParts.year);\n            const bodyIsVisible = el.classList.contains('datetime-ready');\n            const { isGridStyle, showMonthAndYear } = this;\n            let areAllSelectedDatesInSameMonth = true;\n            if (Array.isArray(valueToProcess)) {\n                const firstMonth = valueToProcess[0].month;\n                for (const date of valueToProcess) {\n                    if (date.month !== firstMonth) {\n                        areAllSelectedDatesInSameMonth = false;\n                        break;\n                    }\n                }\n            }\n            /**\n             * If there is more than one date selected\n             * and the dates aren't all in the same month,\n             * then we should neither animate to the date\n             * nor update the working parts because we do\n             * not know which date the user wants to view.\n             */\n            if (areAllSelectedDatesInSameMonth) {\n                if (isGridStyle && didChangeMonth && bodyIsVisible && !showMonthAndYear) {\n                    this.animateToDate(targetValue);\n                }\n                else {\n                    /**\n                     * We only need to do this if we didn't just animate to a new month,\n                     * since that calls prevMonth/nextMonth which calls setWorkingParts for us.\n                     */\n                    this.setWorkingParts({\n                        month,\n                        day,\n                        year,\n                        hour,\n                        minute,\n                        ampm,\n                    });\n                }\n            }\n        };\n        this.animateToDate = async (targetValue) => {\n            const { workingParts } = this;\n            /**\n             * Tell other render functions that we need to force the\n             * target month to appear in place of the actual next/prev month.\n             * Because this is a State variable, a rerender will be triggered\n             * automatically, updating the rendered months.\n             */\n            this.forceRenderDate = targetValue;\n            /**\n             * Flag that we've started scrolling to the forced date.\n             * The resolve function will be called by the datetime's\n             * scroll listener when it's done updating everything.\n             * This is a replacement for making prev/nextMonth async,\n             * since the logic we're waiting on is in a listener.\n             */\n            const forceDateScrollingPromise = new Promise((resolve) => {\n                this.resolveForceDateScrolling = resolve;\n            });\n            /**\n             * Animate smoothly to the forced month. This will also update\n             * workingParts and correct the surrounding months for us.\n             */\n            const targetMonthIsBefore = isBefore(targetValue, workingParts);\n            targetMonthIsBefore ? this.prevMonth() : this.nextMonth();\n            await forceDateScrollingPromise;\n            this.resolveForceDateScrolling = undefined;\n            this.forceRenderDate = undefined;\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.hasValue = () => {\n            return this.value != null;\n        };\n        this.nextMonth = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n            if (!nextMonth) {\n                return;\n            }\n            const left = nextMonth.offsetWidth * 2;\n            calendarBodyRef.scrollTo({\n                top: 0,\n                left: left * (isRTL(this.el) ? -1 : 1),\n                behavior: 'smooth',\n            });\n        };\n        this.prevMonth = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n            if (!prevMonth) {\n                return;\n            }\n            calendarBodyRef.scrollTo({\n                top: 0,\n                left: 0,\n                behavior: 'smooth',\n            });\n        };\n        this.toggleMonthAndYearView = () => {\n            this.showMonthAndYear = !this.showMonthAndYear;\n        };\n        this.showMonthAndYear = false;\n        this.activeParts = [];\n        this.workingParts = {\n            month: 5,\n            day: 28,\n            year: 2021,\n            hour: 13,\n            minute: 52,\n            ampm: 'pm',\n        };\n        this.isTimePopoverOpen = false;\n        this.forceRenderDate = undefined;\n        this.color = 'primary';\n        this.name = this.inputId;\n        this.disabled = false;\n        this.formatOptions = undefined;\n        this.readonly = false;\n        this.isDateEnabled = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this.presentation = 'date-time';\n        this.cancelText = 'Cancel';\n        this.doneText = 'Done';\n        this.clearText = 'Clear';\n        this.yearValues = undefined;\n        this.monthValues = undefined;\n        this.dayValues = undefined;\n        this.hourValues = undefined;\n        this.minuteValues = undefined;\n        this.locale = 'default';\n        this.firstDayOfWeek = 0;\n        this.titleSelectedDatesFormatter = undefined;\n        this.multiple = false;\n        this.highlightedDates = undefined;\n        this.value = undefined;\n        this.showDefaultTitle = false;\n        this.showDefaultButtons = false;\n        this.showClearButton = false;\n        this.showDefaultTimeLabel = true;\n        this.hourCycle = undefined;\n        this.size = 'fixed';\n        this.preferWheel = false;\n    }\n    formatOptionsChanged() {\n        const { el, formatOptions, presentation } = this;\n        checkForPresentationFormatMismatch(el, presentation, formatOptions);\n        warnIfTimeZoneProvided(el, formatOptions);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    minChanged() {\n        this.processMinParts();\n    }\n    maxChanged() {\n        this.processMaxParts();\n    }\n    presentationChanged() {\n        const { el, formatOptions, presentation } = this;\n        checkForPresentationFormatMismatch(el, presentation, formatOptions);\n    }\n    get isGridStyle() {\n        const { presentation, preferWheel } = this;\n        const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n        return hasDatePresentation && !preferWheel;\n    }\n    yearValuesChanged() {\n        this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n    }\n    monthValuesChanged() {\n        this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n    }\n    dayValuesChanged() {\n        this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n    }\n    hourValuesChanged() {\n        this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n    }\n    minuteValuesChanged() {\n        this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n    }\n    /**\n     * Update the datetime value when the value changes\n     */\n    async valueChanged() {\n        const { value } = this;\n        if (this.hasValue()) {\n            this.processValue(value);\n        }\n        this.emitStyle();\n        this.ionValueChange.emit({ value });\n    }\n    /**\n     * Confirms the selected datetime value, updates the\n     * `value` property, and optionally closes the popover\n     * or modal that the datetime was presented in.\n     */\n    async confirm(closeOverlay = false) {\n        const { isCalendarPicker, activeParts, preferWheel, workingParts } = this;\n        /**\n         * We only update the value if the presentation is not a calendar picker.\n         */\n        if (activeParts !== undefined || !isCalendarPicker) {\n            const activePartsIsArray = Array.isArray(activeParts);\n            if (activePartsIsArray && activeParts.length === 0) {\n                if (preferWheel) {\n                    /**\n                     * If the datetime is using a wheel picker, but the\n                     * active parts are empty, then the user has confirmed the\n                     * initial value (working parts) presented to them.\n                     */\n                    this.setValue(convertDataToISO(workingParts));\n                }\n                else {\n                    this.setValue(undefined);\n                }\n            }\n            else {\n                this.setValue(convertDataToISO(activeParts));\n            }\n        }\n        if (closeOverlay) {\n            this.closeParentOverlay();\n        }\n    }\n    /**\n     * Resets the internal state of the datetime but does not update the value.\n     * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n     * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n     */\n    async reset(startDate) {\n        this.processValue(startDate);\n    }\n    /**\n     * Emits the ionCancel event and\n     * optionally closes the popover\n     * or modal that the datetime was\n     * presented in.\n     */\n    async cancel(closeOverlay = false) {\n        this.ionCancel.emit();\n        if (closeOverlay) {\n            this.closeParentOverlay();\n        }\n    }\n    get isCalendarPicker() {\n        const { presentation } = this;\n        return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    }\n    connectedCallback() {\n        this.clearFocusVisible = startFocusVisible(this.el).destroy;\n    }\n    disconnectedCallback() {\n        if (this.clearFocusVisible) {\n            this.clearFocusVisible();\n            this.clearFocusVisible = undefined;\n        }\n    }\n    initializeListeners() {\n        this.initializeCalendarListener();\n        this.initializeKeyboardListeners();\n    }\n    componentDidLoad() {\n        const { el, intersectionTrackerRef } = this;\n        /**\n         * If a scrollable element is hidden using `display: none`,\n         * it will not have a scroll height meaning we cannot scroll elements\n         * into view. As a result, we will need to wait for the datetime to become\n         * visible if used inside of a modal or a popover otherwise the scrollable\n         * areas will not have the correct values snapped into place.\n         */\n        const visibleCallback = (entries) => {\n            const ev = entries[0];\n            if (!ev.isIntersecting) {\n                return;\n            }\n            this.initializeListeners();\n            /**\n             * TODO FW-2793: Datetime needs a frame to ensure that it\n             * can properly scroll contents into view. As a result\n             * we hide the scrollable content until after that frame\n             * so users do not see the content quickly shifting. The downside\n             * is that the content will pop into view a frame after. Maybe there\n             * is a better way to handle this?\n             */\n            writeTask(() => {\n                this.el.classList.add('datetime-ready');\n            });\n        };\n        const visibleIO = new IntersectionObserver(visibleCallback, { threshold: 0.01, root: el });\n        /**\n         * Use raf to avoid a race condition between the component loading and\n         * its display animation starting (such as when shown in a modal). This\n         * could cause the datetime to start at a visibility of 0, erroneously\n         * triggering the `hiddenIO` observer below.\n         */\n        raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(intersectionTrackerRef));\n        /**\n         * We need to clean up listeners when the datetime is hidden\n         * in a popover/modal so that we can properly scroll containers\n         * back into view if they are re-presented. When the datetime is hidden\n         * the scroll areas have scroll widths/heights of 0px, so any snapping\n         * we did originally has been lost.\n         */\n        const hiddenCallback = (entries) => {\n            const ev = entries[0];\n            if (ev.isIntersecting) {\n                return;\n            }\n            this.destroyInteractionListeners();\n            /**\n             * When datetime is hidden, we need to make sure that\n             * the month/year picker is closed. Otherwise,\n             * it will be open when the datetime re-appears\n             * and the scroll area of the calendar grid will be 0.\n             * As a result, the wrong month will be shown.\n             */\n            this.showMonthAndYear = false;\n            writeTask(() => {\n                this.el.classList.remove('datetime-ready');\n            });\n        };\n        const hiddenIO = new IntersectionObserver(hiddenCallback, { threshold: 0, root: el });\n        raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(intersectionTrackerRef));\n        /**\n         * Datetime uses Ionic components that emit\n         * ionFocus and ionBlur. These events are\n         * composed meaning they will cross\n         * the shadow dom boundary. We need to\n         * stop propagation on these events otherwise\n         * developers will see 2 ionFocus or 2 ionBlur\n         * events at a time.\n         */\n        const root = getElementRoot(this.el);\n        root.addEventListener('ionFocus', (ev) => ev.stopPropagation());\n        root.addEventListener('ionBlur', (ev) => ev.stopPropagation());\n    }\n    /**\n     * When the presentation is changed, all calendar content is recreated,\n     * so we need to re-init behavior with the new elements.\n     */\n    componentDidRender() {\n        const { presentation, prevPresentation, calendarBodyRef, minParts, preferWheel, forceRenderDate } = this;\n        /**\n         * TODO(FW-2165)\n         * Remove this when https://bugs.webkit.org/show_bug.cgi?id=235960 is fixed.\n         * When using `min`, we add `scroll-snap-align: none`\n         * to the disabled month so that users cannot scroll to it.\n         * This triggers a bug in WebKit where the scroll position is reset.\n         * Since the month change logic is handled by a scroll listener,\n         * this causes the month to change leading to `scroll-snap-align`\n         * changing again, thus changing the scroll position again and causing\n         * an infinite loop.\n         * This issue only applies to the calendar grid, so we can disable\n         * it if the calendar grid is not being used.\n         */\n        const hasCalendarGrid = !preferWheel && ['date-time', 'time-date', 'date'].includes(presentation);\n        if (minParts !== undefined && hasCalendarGrid && calendarBodyRef) {\n            const workingMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(1)');\n            /**\n             * We need to make sure the datetime is not in the process\n             * of scrolling to a new datetime value if the value\n             * is updated programmatically.\n             * Otherwise, the datetime will appear to not scroll at all because\n             * we are resetting the scroll position to the center of the view.\n             * Prior to the datetime's value being updated programmatically,\n             * the calendarBodyRef is scrolled such that the middle month is centered\n             * in the view. The below code updates the scroll position so the middle\n             * month is also centered in the view. Since the scroll position did not change,\n             * the scroll callback in this file does not fire,\n             * and the resolveForceDateScrolling promise never resolves.\n             */\n            if (workingMonth && forceRenderDate === undefined) {\n                calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n            }\n        }\n        if (prevPresentation === null) {\n            this.prevPresentation = presentation;\n            return;\n        }\n        if (presentation === prevPresentation) {\n            return;\n        }\n        this.prevPresentation = presentation;\n        this.destroyInteractionListeners();\n        this.initializeListeners();\n        /**\n         * The month/year picker from the date interface\n         * should be closed as it is not available in non-date\n         * interfaces.\n         */\n        this.showMonthAndYear = false;\n        raf(() => {\n            this.ionRender.emit();\n        });\n    }\n    componentWillLoad() {\n        const { el, formatOptions, highlightedDates, multiple, presentation, preferWheel } = this;\n        if (multiple) {\n            if (presentation !== 'date') {\n                printIonWarning('Multiple date selection is only supported for presentation=\"date\".', el);\n            }\n            if (preferWheel) {\n                printIonWarning('Multiple date selection is not supported with preferWheel=\"true\".', el);\n            }\n        }\n        if (highlightedDates !== undefined) {\n            if (presentation !== 'date' && presentation !== 'date-time' && presentation !== 'time-date') {\n                printIonWarning('The highlightedDates property is only supported with the date, date-time, and time-date presentations.', el);\n            }\n            if (preferWheel) {\n                printIonWarning('The highlightedDates property is not supported with preferWheel=\"true\".', el);\n            }\n        }\n        if (formatOptions) {\n            checkForPresentationFormatMismatch(el, presentation, formatOptions);\n            warnIfTimeZoneProvided(el, formatOptions);\n        }\n        const hourValues = (this.parsedHourValues = convertToArrayOfNumbers(this.hourValues));\n        const minuteValues = (this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues));\n        const monthValues = (this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues));\n        const yearValues = (this.parsedYearValues = convertToArrayOfNumbers(this.yearValues));\n        const dayValues = (this.parsedDayValues = convertToArrayOfNumbers(this.dayValues));\n        const todayParts = (this.todayParts = parseDate(getToday()));\n        this.processMinParts();\n        this.processMaxParts();\n        this.defaultParts = getClosestValidDate({\n            refParts: todayParts,\n            monthValues,\n            dayValues,\n            yearValues,\n            hourValues,\n            minuteValues,\n            minParts: this.minParts,\n            maxParts: this.maxParts,\n        });\n        this.processValue(this.value);\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            interactive: true,\n            datetime: true,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    /**\n     * Universal render methods\n     * These are pieces of datetime that\n     * are rendered independently of presentation.\n     */\n    renderFooter() {\n        const { disabled, readonly, showDefaultButtons, showClearButton } = this;\n        /**\n         * The cancel, clear, and confirm buttons\n         * should not be interactive if the datetime\n         * is disabled or readonly.\n         */\n        const isButtonDisabled = disabled || readonly;\n        const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n        if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n            return;\n        }\n        const clearButtonClick = () => {\n            this.reset();\n            this.setValue(undefined);\n        };\n        /**\n         * By default we render two buttons:\n         * Cancel - Dismisses the datetime and\n         * does not update the `value` prop.\n         * OK - Dismisses the datetime and\n         * updates the `value` prop.\n         */\n        return (h(\"div\", { class: \"datetime-footer\" }, h(\"div\", { class: \"datetime-buttons\" }, h(\"div\", { class: {\n                ['datetime-action-buttons']: true,\n                ['has-clear-button']: this.showClearButton,\n            } }, h(\"slot\", { name: \"buttons\" }, h(\"ion-buttons\", null, showDefaultButtons && (h(\"ion-button\", { id: \"cancel-button\", color: this.color, onClick: () => this.cancel(true), disabled: isButtonDisabled }, this.cancelText)), h(\"div\", { class: \"datetime-action-buttons-container\" }, showClearButton && (h(\"ion-button\", { id: \"clear-button\", color: this.color, onClick: () => clearButtonClick(), disabled: isButtonDisabled }, this.clearText)), showDefaultButtons && (h(\"ion-button\", { id: \"confirm-button\", color: this.color, onClick: () => this.confirm(true), disabled: isButtonDisabled }, this.doneText)))))))));\n    }\n    /**\n     * Wheel picker render methods\n     */\n    renderWheelPicker(forcePresentation = this.presentation) {\n        /**\n         * If presentation=\"time-date\" we switch the\n         * order of the render array here instead of\n         * manually reordering each date/time picker\n         * column with CSS. This allows for additional\n         * flexibility if we need to render subsets\n         * of the date/time data or do additional ordering\n         * within the child render functions.\n         */\n        const renderArray = forcePresentation === 'time-date'\n            ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)]\n            : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n        return h(\"ion-picker-internal\", null, renderArray);\n    }\n    renderDatePickerColumns(forcePresentation) {\n        return forcePresentation === 'date-time' || forcePresentation === 'time-date'\n            ? this.renderCombinedDatePickerColumn()\n            : this.renderIndividualDatePickerColumns(forcePresentation);\n    }\n    renderCombinedDatePickerColumn() {\n        const { defaultParts, disabled, workingParts, locale, minParts, maxParts, todayParts, isDateEnabled } = this;\n        const activePart = this.getActivePartsWithFallback();\n        /**\n         * By default, generate a range of 3 months:\n         * Previous month, current month, and next month\n         */\n        const monthsToRender = generateMonths(workingParts);\n        const lastMonth = monthsToRender[monthsToRender.length - 1];\n        /**\n         * Ensure that users can select the entire window of dates.\n         */\n        monthsToRender[0].day = 1;\n        lastMonth.day = getNumDaysInMonth(lastMonth.month, lastMonth.year);\n        /**\n         * Narrow the dates rendered based on min/max dates (if any).\n         * The `min` date is used if the min is after the generated min month.\n         * The `max` date is used if the max is before the generated max month.\n         * This ensures that the sliding window always stays at 3 months\n         * but still allows future dates to be lazily rendered based on any min/max\n         * constraints.\n         */\n        const min = minParts !== undefined && isAfter(minParts, monthsToRender[0]) ? minParts : monthsToRender[0];\n        const max = maxParts !== undefined && isBefore(maxParts, lastMonth) ? maxParts : lastMonth;\n        const result = getCombinedDateColumnData(locale, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n        let items = result.items;\n        const parts = result.parts;\n        if (isDateEnabled) {\n            items = items.map((itemObject, index) => {\n                const referenceParts = parts[index];\n                let disabled;\n                try {\n                    /**\n                     * The `isDateEnabled` implementation is try-catch wrapped\n                     * to prevent exceptions in the user's function from\n                     * interrupting the calendar rendering.\n                     */\n                    disabled = !isDateEnabled(convertDataToISO(referenceParts));\n                }\n                catch (e) {\n                    printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n                }\n                return Object.assign(Object.assign({}, itemObject), { disabled });\n            });\n        }\n        /**\n         * If we have selected a day already, then default the column\n         * to that value. Otherwise, set it to the default date.\n         */\n        const todayString = workingParts.day !== null\n            ? `${workingParts.year}-${workingParts.month}-${workingParts.day}`\n            : `${defaultParts.year}-${defaultParts.month}-${defaultParts.day}`;\n        return (h(\"ion-picker-column-internal\", { class: \"date-column\", color: this.color, disabled: disabled, items: items, value: todayString, onIonChange: (ev) => {\n                // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n                // Due to a Safari 14 issue we need to destroy\n                // the scroll listener before we update state\n                // and trigger a re-render.\n                if (this.destroyCalendarListener) {\n                    this.destroyCalendarListener();\n                }\n                const { value } = ev.detail;\n                const findPart = parts.find(({ month, day, year }) => value === `${year}-${month}-${day}`);\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), findPart));\n                // We can re-attach the scroll listener after\n                // the working parts have been updated.\n                this.initializeCalendarListener();\n                ev.stopPropagation();\n            } }));\n    }\n    renderIndividualDatePickerColumns(forcePresentation) {\n        const { workingParts, isDateEnabled } = this;\n        const shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n        const months = shouldRenderMonths\n            ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues)\n            : [];\n        const shouldRenderDays = forcePresentation === 'date';\n        let days = shouldRenderDays\n            ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues)\n            : [];\n        if (isDateEnabled) {\n            days = days.map((dayObject) => {\n                const { value } = dayObject;\n                const valueNum = typeof value === 'string' ? parseInt(value) : value;\n                const referenceParts = {\n                    month: workingParts.month,\n                    day: valueNum,\n                    year: workingParts.year,\n                };\n                let disabled;\n                try {\n                    /**\n                     * The `isDateEnabled` implementation is try-catch wrapped\n                     * to prevent exceptions in the user's function from\n                     * interrupting the calendar rendering.\n                     */\n                    disabled = !isDateEnabled(convertDataToISO(referenceParts));\n                }\n                catch (e) {\n                    printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n                }\n                return Object.assign(Object.assign({}, dayObject), { disabled });\n            });\n        }\n        const shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n        const years = shouldRenderYears\n            ? getYearColumnData(this.locale, this.defaultParts, this.minParts, this.maxParts, this.parsedYearValues)\n            : [];\n        /**\n         * Certain locales show the day before the month.\n         */\n        const showMonthFirst = isMonthFirstLocale(this.locale, { month: 'numeric', day: 'numeric' });\n        let renderArray = [];\n        if (showMonthFirst) {\n            renderArray = [\n                this.renderMonthPickerColumn(months),\n                this.renderDayPickerColumn(days),\n                this.renderYearPickerColumn(years),\n            ];\n        }\n        else {\n            renderArray = [\n                this.renderDayPickerColumn(days),\n                this.renderMonthPickerColumn(months),\n                this.renderYearPickerColumn(years),\n            ];\n        }\n        return renderArray;\n    }\n    renderDayPickerColumn(days) {\n        var _a;\n        if (days.length === 0) {\n            return [];\n        }\n        const { disabled, workingParts } = this;\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column-internal\", { class: \"day-column\", color: this.color, disabled: disabled, items: days, value: (_a = (workingParts.day !== null ? workingParts.day : this.defaultParts.day)) !== null && _a !== void 0 ? _a : undefined, onIonChange: (ev) => {\n                // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n                // Due to a Safari 14 issue we need to destroy\n                // the scroll listener before we update state\n                // and trigger a re-render.\n                if (this.destroyCalendarListener) {\n                    this.destroyCalendarListener();\n                }\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { day: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { day: ev.detail.value }));\n                // We can re-attach the scroll listener after\n                // the working parts have been updated.\n                this.initializeCalendarListener();\n                ev.stopPropagation();\n            } }));\n    }\n    renderMonthPickerColumn(months) {\n        if (months.length === 0) {\n            return [];\n        }\n        const { disabled, workingParts } = this;\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column-internal\", { class: \"month-column\", color: this.color, disabled: disabled, items: months, value: workingParts.month, onIonChange: (ev) => {\n                // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n                // Due to a Safari 14 issue we need to destroy\n                // the scroll listener before we update state\n                // and trigger a re-render.\n                if (this.destroyCalendarListener) {\n                    this.destroyCalendarListener();\n                }\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { month: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { month: ev.detail.value }));\n                // We can re-attach the scroll listener after\n                // the working parts have been updated.\n                this.initializeCalendarListener();\n                ev.stopPropagation();\n            } }));\n    }\n    renderYearPickerColumn(years) {\n        if (years.length === 0) {\n            return [];\n        }\n        const { disabled, workingParts } = this;\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column-internal\", { class: \"year-column\", color: this.color, disabled: disabled, items: years, value: workingParts.year, onIonChange: (ev) => {\n                // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n                // Due to a Safari 14 issue we need to destroy\n                // the scroll listener before we update state\n                // and trigger a re-render.\n                if (this.destroyCalendarListener) {\n                    this.destroyCalendarListener();\n                }\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { year: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { year: ev.detail.value }));\n                // We can re-attach the scroll listener after\n                // the working parts have been updated.\n                this.initializeCalendarListener();\n                ev.stopPropagation();\n            } }));\n    }\n    renderTimePickerColumns(forcePresentation) {\n        if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n            return [];\n        }\n        /**\n         * If a user has not selected a date,\n         * then we should show all times. If the\n         * user has selected a date (even if it has\n         * not been confirmed yet), we should apply\n         * the max and min restrictions so that the\n         * time picker shows values that are\n         * appropriate for the selected date.\n         */\n        const activePart = this.getActivePart();\n        const userHasSelectedDate = activePart !== undefined;\n        const { hoursData, minutesData, dayPeriodData } = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, userHasSelectedDate ? this.minParts : undefined, userHasSelectedDate ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues);\n        return [\n            this.renderHourPickerColumn(hoursData),\n            this.renderMinutePickerColumn(minutesData),\n            this.renderDayPeriodPickerColumn(dayPeriodData),\n        ];\n    }\n    renderHourPickerColumn(hoursData) {\n        const { disabled, workingParts } = this;\n        if (hoursData.length === 0)\n            return [];\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column-internal\", { color: this.color, disabled: disabled, value: activePart.hour, items: hoursData, numericInput: true, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { hour: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { hour: ev.detail.value }));\n                ev.stopPropagation();\n            } }));\n    }\n    renderMinutePickerColumn(minutesData) {\n        const { disabled, workingParts } = this;\n        if (minutesData.length === 0)\n            return [];\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column-internal\", { color: this.color, disabled: disabled, value: activePart.minute, items: minutesData, numericInput: true, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { minute: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { minute: ev.detail.value }));\n                ev.stopPropagation();\n            } }));\n    }\n    renderDayPeriodPickerColumn(dayPeriodData) {\n        const { disabled, workingParts } = this;\n        if (dayPeriodData.length === 0) {\n            return [];\n        }\n        const activePart = this.getActivePartsWithFallback();\n        const isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n        return (h(\"ion-picker-column-internal\", { style: isDayPeriodRTL ? { order: '-1' } : {}, color: this.color, disabled: disabled, value: activePart.ampm, items: dayPeriodData, onIonChange: (ev) => {\n                const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm: ev.detail.value, hour }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { ampm: ev.detail.value, hour }));\n                ev.stopPropagation();\n            } }));\n    }\n    renderWheelView(forcePresentation) {\n        const { locale } = this;\n        const showMonthFirst = isMonthFirstLocale(locale);\n        const columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n        return (h(\"div\", { class: {\n                [`wheel-order-${columnOrder}`]: true,\n            } }, this.renderWheelPicker(forcePresentation)));\n    }\n    /**\n     * Grid Render Methods\n     */\n    renderCalendarHeader(mode) {\n        const { disabled } = this;\n        const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n        const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n        const prevMonthDisabled = disabled || isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n        const nextMonthDisabled = disabled || isNextMonthDisabled(this.workingParts, this.maxParts);\n        // don't use the inheritAttributes util because it removes dir from the host, and we still need that\n        const hostDir = this.el.getAttribute('dir') || undefined;\n        return (h(\"div\", { class: \"calendar-header\" }, h(\"div\", { class: \"calendar-action-buttons\" }, h(\"div\", { class: \"calendar-month-year\" }, h(\"ion-item\", { part: \"month-year-button\", ref: (el) => (this.monthYearToggleItemRef = el), button: true, \"aria-label\": \"Show year picker\", detail: false, lines: \"none\", disabled: disabled, onClick: () => {\n                var _a;\n                this.toggleMonthAndYearView();\n                /**\n                 * TODO: FW-3547\n                 *\n                 * Currently there is not a way to set the aria-label on the inner button\n                 * on the `ion-item` and have it be reactive to changes. This is a workaround\n                 * until we either refactor `ion-item` to a button or Stencil adds a way to\n                 * have reactive props for built-in properties, such as `aria-label`.\n                 */\n                const { monthYearToggleItemRef } = this;\n                if (monthYearToggleItemRef) {\n                    const btn = (_a = monthYearToggleItemRef.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.item-native');\n                    if (btn) {\n                        const monthYearAriaLabel = this.showMonthAndYear ? 'Hide year picker' : 'Show year picker';\n                        btn.setAttribute('aria-label', monthYearAriaLabel);\n                    }\n                }\n            } }, h(\"ion-label\", null, getMonthAndYear(this.locale, this.workingParts), h(\"ion-icon\", { \"aria-hidden\": \"true\", icon: this.showMonthAndYear ? expandedIcon : collapsedIcon, lazy: false, flipRtl: true })))), h(\"div\", { class: \"calendar-next-prev\" }, h(\"ion-buttons\", null, h(\"ion-button\", { \"aria-label\": \"Previous month\", disabled: prevMonthDisabled, onClick: () => this.prevMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronBack, lazy: false, flipRtl: true })), h(\"ion-button\", { \"aria-label\": \"Next month\", disabled: nextMonthDisabled, onClick: () => this.nextMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronForward, lazy: false, flipRtl: true }))))), h(\"div\", { class: \"calendar-days-of-week\", \"aria-hidden\": \"true\" }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map((d) => {\n            return h(\"div\", { class: \"day-of-week\" }, d);\n        }))));\n    }\n    renderMonth(month, year) {\n        const { disabled, readonly } = this;\n        const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n        const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n        const isCalMonthDisabled = !yearAllowed || !monthAllowed;\n        const isDatetimeDisabled = disabled || readonly;\n        const swipeDisabled = disabled ||\n            isMonthDisabled({\n                month,\n                year,\n                day: null,\n            }, {\n                // The day is not used when checking if a month is disabled.\n                // Users should be able to access the min or max month, even if the\n                // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n                minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n                maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n            });\n        // The working month should never have swipe disabled.\n        // Otherwise the CSS scroll snap will not work and the user\n        // can free-scroll the calendar.\n        const isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"div\", { \"aria-hidden\": !isWorkingMonth ? 'true' : null, class: {\n                'calendar-month': true,\n                // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n                'calendar-month-disabled': !isWorkingMonth && swipeDisabled,\n            } }, h(\"div\", { class: \"calendar-month-grid\" }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map((dateObject, index) => {\n            const { day, dayOfWeek } = dateObject;\n            const { el, highlightedDates, isDateEnabled, multiple } = this;\n            const referenceParts = { month, day, year };\n            const isCalendarPadding = day === null;\n            const { isActive, isToday, ariaLabel, ariaSelected, disabled: isDayDisabled, text, } = getCalendarDayState(this.locale, referenceParts, this.activeParts, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n            const dateIsoString = convertDataToISO(referenceParts);\n            let isCalDayDisabled = isCalMonthDisabled || isDayDisabled;\n            if (!isCalDayDisabled && isDateEnabled !== undefined) {\n                try {\n                    /**\n                     * The `isDateEnabled` implementation is try-catch wrapped\n                     * to prevent exceptions in the user's function from\n                     * interrupting the calendar rendering.\n                     */\n                    isCalDayDisabled = !isDateEnabled(dateIsoString);\n                }\n                catch (e) {\n                    printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', el, e);\n                }\n            }\n            /**\n             * Some days are constrained through max & min or allowed dates\n             * and also disabled because the component is readonly or disabled.\n             * These need to be displayed differently.\n             */\n            const isCalDayConstrained = isCalDayDisabled && isDatetimeDisabled;\n            const isButtonDisabled = isCalDayDisabled || isDatetimeDisabled;\n            let dateStyle = undefined;\n            /**\n             * Custom highlight styles should not override the style for selected dates,\n             * nor apply to \"filler days\" at the start of the grid.\n             */\n            if (highlightedDates !== undefined && !isActive && day !== null) {\n                dateStyle = getHighlightStyles(highlightedDates, dateIsoString, el);\n            }\n            let dateParts = undefined;\n            // \"Filler days\" at the beginning of the grid should not get the calendar day\n            // CSS parts added to them\n            if (!isCalendarPadding) {\n                dateParts = `calendar-day${isActive ? ' active' : ''}${isToday ? ' today' : ''}${isCalDayDisabled ? ' disabled' : ''}`;\n            }\n            return (h(\"div\", { class: \"calendar-day-wrapper\" }, h(\"button\", {\n                // We need to use !important for the inline styles here because\n                // otherwise the CSS shadow parts will override these styles.\n                // See https://github.com/WICG/webcomponents/issues/847\n                // Both the CSS shadow parts and highlightedDates styles are\n                // provided by the developer, but highlightedDates styles should\n                // always take priority.\n                ref: (el) => {\n                    if (el) {\n                        el.style.setProperty('color', `${dateStyle ? dateStyle.textColor : ''}`, 'important');\n                        el.style.setProperty('background-color', `${dateStyle ? dateStyle.backgroundColor : ''}`, 'important');\n                    }\n                }, tabindex: \"-1\", \"data-day\": day, \"data-month\": month, \"data-year\": year, \"data-index\": index, \"data-day-of-week\": dayOfWeek, disabled: isButtonDisabled, class: {\n                    'calendar-day-padding': isCalendarPadding,\n                    'calendar-day': true,\n                    'calendar-day-active': isActive,\n                    'calendar-day-constrained': isCalDayConstrained,\n                    'calendar-day-today': isToday,\n                }, part: dateParts, \"aria-hidden\": isCalendarPadding ? 'true' : null, \"aria-selected\": ariaSelected, \"aria-label\": ariaLabel, onClick: () => {\n                    if (isCalendarPadding) {\n                        return;\n                    }\n                    this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month,\n                        day,\n                        year }));\n                    // multiple only needs date info, so we can wipe out other fields like time\n                    if (multiple) {\n                        this.setActiveParts({\n                            month,\n                            day,\n                            year,\n                        }, isActive);\n                    }\n                    else {\n                        this.setActiveParts(Object.assign(Object.assign({}, activePart), { month,\n                            day,\n                            year }));\n                    }\n                }\n            }, text)));\n        }))));\n    }\n    renderCalendarBody() {\n        return (h(\"div\", { class: \"calendar-body ion-focusable\", ref: (el) => (this.calendarBodyRef = el), tabindex: \"0\" }, generateMonths(this.workingParts, this.forceRenderDate).map(({ month, year }) => {\n            return this.renderMonth(month, year);\n        })));\n    }\n    renderCalendar(mode) {\n        return (h(\"div\", { class: \"datetime-calendar\", key: \"datetime-calendar\" }, this.renderCalendarHeader(mode), this.renderCalendarBody()));\n    }\n    renderTimeLabel() {\n        const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n        if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n            return;\n        }\n        return h(\"slot\", { name: \"time-label\" }, \"Time\");\n    }\n    renderTimeOverlay() {\n        const { disabled, hourCycle, isTimePopoverOpen, locale, formatOptions } = this;\n        const computedHourCycle = getHourCycle(locale, hourCycle);\n        const activePart = this.getActivePartsWithFallback();\n        return [\n            h(\"div\", { class: \"time-header\" }, this.renderTimeLabel()),\n            h(\"button\", { class: {\n                    'time-body': true,\n                    'time-body-active': isTimePopoverOpen,\n                }, part: `time-button${isTimePopoverOpen ? ' active' : ''}`, \"aria-expanded\": \"false\", \"aria-haspopup\": \"true\", disabled: disabled, onClick: async (ev) => {\n                    const { popoverRef } = this;\n                    if (popoverRef) {\n                        this.isTimePopoverOpen = true;\n                        popoverRef.present(new CustomEvent('ionShadowTarget', {\n                            detail: {\n                                ionShadowTarget: ev.target,\n                            },\n                        }));\n                        await popoverRef.onWillDismiss();\n                        this.isTimePopoverOpen = false;\n                    }\n                } }, getLocalizedTime(locale, activePart, computedHourCycle, formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time)),\n            h(\"ion-popover\", { alignment: \"center\", translucent: true, overlayIndex: 1, arrow: false, onWillPresent: (ev) => {\n                    /**\n                     * Intersection Observers do not consistently fire between Blink and Webkit\n                     * when toggling the visibility of the popover and trying to scroll the picker\n                     * column to the correct time value.\n                     *\n                     * This will correctly scroll the element position to the correct time value,\n                     * before the popover is fully presented.\n                     */\n                    const cols = ev.target.querySelectorAll('ion-picker-column-internal');\n                    // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n                    cols.forEach((col) => col.scrollActiveItemIntoView());\n                }, style: {\n                    '--offset-y': '-10px',\n                    '--min-width': 'fit-content',\n                },\n                // Allow native browser keyboard events to support up/down/home/end key\n                // navigation within the time picker.\n                keyboardEvents: true, ref: (el) => (this.popoverRef = el) }, this.renderWheelPicker('time')),\n        ];\n    }\n    getHeaderSelectedDateText() {\n        var _a;\n        const { activeParts, formatOptions, multiple, titleSelectedDatesFormatter } = this;\n        const isArray = Array.isArray(activeParts);\n        let headerText;\n        if (multiple && isArray && activeParts.length !== 1) {\n            headerText = `${activeParts.length} days`; // default/fallback for multiple selection\n            if (titleSelectedDatesFormatter !== undefined) {\n                try {\n                    headerText = titleSelectedDatesFormatter(convertDataToISO(activeParts));\n                }\n                catch (e) {\n                    printIonError('Exception in provided `titleSelectedDatesFormatter`: ', e);\n                }\n            }\n        }\n        else {\n            // for exactly 1 day selected (multiple set or not), show a formatted version of that\n            headerText = getLocalizedDateTime(this.locale, this.getActivePartsWithFallback(), (_a = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) !== null && _a !== void 0 ? _a : { weekday: 'short', month: 'short', day: 'numeric' });\n        }\n        return headerText;\n    }\n    renderHeader(showExpandedHeader = true) {\n        const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n        if (!hasSlottedTitle && !this.showDefaultTitle) {\n            return;\n        }\n        return (h(\"div\", { class: \"datetime-header\" }, h(\"div\", { class: \"datetime-title\" }, h(\"slot\", { name: \"title\" }, \"Select Date\")), showExpandedHeader && h(\"div\", { class: \"datetime-selected-date\" }, this.getHeaderSelectedDateText())));\n    }\n    /**\n     * Render time picker inside of datetime.\n     * Do not pass color prop to segment on\n     * iOS mode. MD segment has been customized and\n     * should take on the color prop, but iOS\n     * should just be the default segment.\n     */\n    renderTime() {\n        const { presentation } = this;\n        const timeOnlyPresentation = presentation === 'time';\n        return (h(\"div\", { class: \"datetime-time\" }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay()));\n    }\n    /**\n     * Renders the month/year picker that is\n     * displayed on the calendar grid.\n     * The .datetime-year class has additional\n     * styles that let us show/hide the\n     * picker when the user clicks on the\n     * toggle in the calendar header.\n     */\n    renderCalendarViewMonthYearPicker() {\n        return h(\"div\", { class: \"datetime-year\" }, this.renderWheelView('month-year'));\n    }\n    /**\n     * Render entry point\n     * All presentation types are rendered from here.\n     */\n    renderDatetime(mode) {\n        const { presentation, preferWheel } = this;\n        /**\n         * Certain presentation types have separate grid and wheel displays.\n         * If preferWheel is true then we should show a wheel picker instead.\n         */\n        const hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n        if (preferWheel && hasWheelVariant) {\n            return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n        }\n        switch (presentation) {\n            case 'date-time':\n                return [\n                    this.renderHeader(),\n                    this.renderCalendar(mode),\n                    this.renderCalendarViewMonthYearPicker(),\n                    this.renderTime(),\n                    this.renderFooter(),\n                ];\n            case 'time-date':\n                return [\n                    this.renderHeader(),\n                    this.renderTime(),\n                    this.renderCalendar(mode),\n                    this.renderCalendarViewMonthYearPicker(),\n                    this.renderFooter(),\n                ];\n            case 'time':\n                return [this.renderHeader(false), this.renderTime(), this.renderFooter()];\n            case 'month':\n            case 'month-year':\n            case 'year':\n                return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n            default:\n                return [\n                    this.renderHeader(),\n                    this.renderCalendar(mode),\n                    this.renderCalendarViewMonthYearPicker(),\n                    this.renderFooter(),\n                ];\n        }\n    }\n    render() {\n        const { name, value, disabled, el, color, readonly, showMonthAndYear, preferWheel, presentation, size, isGridStyle, } = this;\n        const mode = getIonMode(this);\n        const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n        const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n        const monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n        const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n        const hasWheelVariant = hasDatePresentation && preferWheel;\n        renderHiddenInput(true, el, name, formatValue(value), disabled);\n        return (h(Host, { key: '8490192beb6c5c6064ed8f2a7be2d51846f84f36', \"aria-disabled\": disabled ? 'true' : null, onFocus: this.onFocus, onBlur: this.onBlur, class: Object.assign({}, createColorClasses(color, {\n                [mode]: true,\n                ['datetime-readonly']: readonly,\n                ['datetime-disabled']: disabled,\n                'show-month-and-year': shouldShowMonthAndYear,\n                'month-year-picker-open': monthYearPickerOpen,\n                [`datetime-presentation-${presentation}`]: true,\n                [`datetime-size-${size}`]: true,\n                [`datetime-prefer-wheel`]: hasWheelVariant,\n                [`datetime-grid`]: isGridStyle,\n            })) }, h(\"div\", { key: 'a2959c07ed871f9004a2f11ab1385a5a7b5737fd', class: \"intersection-tracker\", ref: (el) => (this.intersectionTrackerRef = el) }), this.renderDatetime(mode)));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"formatOptions\": [\"formatOptionsChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"min\": [\"minChanged\"],\n        \"max\": [\"maxChanged\"],\n        \"presentation\": [\"presentationChanged\"],\n        \"yearValues\": [\"yearValuesChanged\"],\n        \"monthValues\": [\"monthValuesChanged\"],\n        \"dayValues\": [\"dayValuesChanged\"],\n        \"hourValues\": [\"hourValuesChanged\"],\n        \"minuteValues\": [\"minuteValuesChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n};\nlet datetimeIds = 0;\nDatetime.style = {\n    ios: IonDatetimeIosStyle0,\n    md: IonDatetimeMdStyle0\n};\n\n/**\n * iOS Picker Enter Animation\n */\nconst iosEnterAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    wrapperAnimation\n        .addElement(baseEl.querySelector('.picker-wrapper'))\n        .fromTo('transform', 'translateY(100%)', 'translateY(0%)');\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('cubic-bezier(.36,.66,.04,1)')\n        .duration(400)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\n/**\n * iOS Picker Leave Animation\n */\nconst iosLeaveAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 'var(--backdrop-opacity)', 0.01);\n    wrapperAnimation\n        .addElement(baseEl.querySelector('.picker-wrapper'))\n        .fromTo('transform', 'translateY(0%)', 'translateY(100%)');\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('cubic-bezier(.36,.66,.04,1)')\n        .duration(400)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\nconst pickerIosCss = \".sc-ion-picker-ios-h{--border-radius:0;--border-style:solid;--min-width:auto;--width:100%;--max-width:500px;--min-height:auto;--max-height:auto;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;top:0;display:block;position:absolute;width:100%;height:100%;outline:none;font-family:var(--ion-font-family, inherit);contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}@supports (inset-inline-start: 0){.sc-ion-picker-ios-h{inset-inline-start:0}}@supports not (inset-inline-start: 0){.sc-ion-picker-ios-h{left:0}[dir=rtl].sc-ion-picker-ios-h,[dir=rtl] .sc-ion-picker-ios-h{left:unset;right:unset;right:0}@supports selector(:dir(rtl)){.sc-ion-picker-ios-h:dir(rtl){left:unset;right:unset;right:0}}}.overlay-hidden.sc-ion-picker-ios-h{display:none}.picker-wrapper.sc-ion-picker-ios{border-radius:var(--border-radius);left:0;right:0;bottom:0;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:auto;margin-bottom:auto;-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);contain:strict;overflow:hidden;z-index:10}.picker-toolbar.sc-ion-picker-ios{width:100%;background:transparent;contain:strict;z-index:1}.picker-button.sc-ion-picker-ios{border:0;font-family:inherit}.picker-button.sc-ion-picker-ios:active,.picker-button.sc-ion-picker-ios:focus{outline:none}.picker-columns.sc-ion-picker-ios{display:-ms-flexbox;display:flex;position:relative;-ms-flex-pack:center;justify-content:center;margin-bottom:var(--ion-safe-area-bottom, 0);contain:strict;overflow:hidden}.picker-above-highlight.sc-ion-picker-ios,.picker-below-highlight.sc-ion-picker-ios{display:none;pointer-events:none}.sc-ion-picker-ios-h{--background:var(--ion-background-color, #fff);--border-width:1px 0 0;--border-color:var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--height:260px;--backdrop-opacity:var(--ion-backdrop-opacity, 0.26);color:var(--ion-item-color, var(--ion-text-color, #000))}.picker-toolbar.sc-ion-picker-ios{display:-ms-flexbox;display:flex;height:44px;border-bottom:0.55px solid var(--border-color)}.picker-toolbar-button.sc-ion-picker-ios{-ms-flex:1;flex:1;text-align:end}.picker-toolbar-button.sc-ion-picker-ios:last-child .picker-button.sc-ion-picker-ios{font-weight:600}.picker-toolbar-button.sc-ion-picker-ios:first-child{font-weight:normal;text-align:start}.picker-button.sc-ion-picker-ios,.picker-button.ion-activated.sc-ion-picker-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-padding-start:1em;padding-inline-start:1em;-webkit-padding-end:1em;padding-inline-end:1em;padding-top:0;padding-bottom:0;height:44px;background:transparent;color:var(--ion-color-primary, #3880ff);font-size:16px}.picker-columns.sc-ion-picker-ios{height:215px;-webkit-perspective:1000px;perspective:1000px}.picker-above-highlight.sc-ion-picker-ios{top:0;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);display:block;position:absolute;width:100%;height:81px;border-bottom:1px solid var(--border-color);background:-webkit-gradient(linear, left top, left bottom, color-stop(20%, var(--background, var(--ion-background-color, #fff))), to(rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8)));background:linear-gradient(to bottom, var(--background, var(--ion-background-color, #fff)) 20%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%);z-index:10}@supports (inset-inline-start: 0){.picker-above-highlight.sc-ion-picker-ios{inset-inline-start:0}}@supports not (inset-inline-start: 0){.picker-above-highlight.sc-ion-picker-ios{left:0}[dir=rtl].sc-ion-picker-ios-h .picker-above-highlight.sc-ion-picker-ios,[dir=rtl] .sc-ion-picker-ios-h .picker-above-highlight.sc-ion-picker-ios{left:unset;right:unset;right:0}[dir=rtl].sc-ion-picker-ios .picker-above-highlight.sc-ion-picker-ios{left:unset;right:unset;right:0}@supports selector(:dir(rtl)){.picker-above-highlight.sc-ion-picker-ios:dir(rtl){left:unset;right:unset;right:0}}}.picker-below-highlight.sc-ion-picker-ios{top:115px;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);display:block;position:absolute;width:100%;height:119px;border-top:1px solid var(--border-color);background:-webkit-gradient(linear, left bottom, left top, color-stop(30%, var(--background, var(--ion-background-color, #fff))), to(rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8)));background:linear-gradient(to top, var(--background, var(--ion-background-color, #fff)) 30%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%);z-index:11}@supports (inset-inline-start: 0){.picker-below-highlight.sc-ion-picker-ios{inset-inline-start:0}}@supports not (inset-inline-start: 0){.picker-below-highlight.sc-ion-picker-ios{left:0}[dir=rtl].sc-ion-picker-ios-h .picker-below-highlight.sc-ion-picker-ios,[dir=rtl] .sc-ion-picker-ios-h .picker-below-highlight.sc-ion-picker-ios{left:unset;right:unset;right:0}[dir=rtl].sc-ion-picker-ios .picker-below-highlight.sc-ion-picker-ios{left:unset;right:unset;right:0}@supports selector(:dir(rtl)){.picker-below-highlight.sc-ion-picker-ios:dir(rtl){left:unset;right:unset;right:0}}}\";\nconst IonPickerIosStyle0 = pickerIosCss;\n\nconst pickerMdCss = \".sc-ion-picker-md-h{--border-radius:0;--border-style:solid;--min-width:auto;--width:100%;--max-width:500px;--min-height:auto;--max-height:auto;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;top:0;display:block;position:absolute;width:100%;height:100%;outline:none;font-family:var(--ion-font-family, inherit);contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}@supports (inset-inline-start: 0){.sc-ion-picker-md-h{inset-inline-start:0}}@supports not (inset-inline-start: 0){.sc-ion-picker-md-h{left:0}[dir=rtl].sc-ion-picker-md-h,[dir=rtl] .sc-ion-picker-md-h{left:unset;right:unset;right:0}@supports selector(:dir(rtl)){.sc-ion-picker-md-h:dir(rtl){left:unset;right:unset;right:0}}}.overlay-hidden.sc-ion-picker-md-h{display:none}.picker-wrapper.sc-ion-picker-md{border-radius:var(--border-radius);left:0;right:0;bottom:0;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:auto;margin-bottom:auto;-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);contain:strict;overflow:hidden;z-index:10}.picker-toolbar.sc-ion-picker-md{width:100%;background:transparent;contain:strict;z-index:1}.picker-button.sc-ion-picker-md{border:0;font-family:inherit}.picker-button.sc-ion-picker-md:active,.picker-button.sc-ion-picker-md:focus{outline:none}.picker-columns.sc-ion-picker-md{display:-ms-flexbox;display:flex;position:relative;-ms-flex-pack:center;justify-content:center;margin-bottom:var(--ion-safe-area-bottom, 0);contain:strict;overflow:hidden}.picker-above-highlight.sc-ion-picker-md,.picker-below-highlight.sc-ion-picker-md{display:none;pointer-events:none}.sc-ion-picker-md-h{--background:var(--ion-background-color, #fff);--border-width:0.55px 0 0;--border-color:var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--height:260px;--backdrop-opacity:var(--ion-backdrop-opacity, 0.26);color:var(--ion-item-color, var(--ion-text-color, #000))}.picker-toolbar.sc-ion-picker-md{display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;height:44px}.picker-button.sc-ion-picker-md,.picker-button.ion-activated.sc-ion-picker-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-padding-start:1.1em;padding-inline-start:1.1em;-webkit-padding-end:1.1em;padding-inline-end:1.1em;padding-top:0;padding-bottom:0;height:44px;background:transparent;color:var(--ion-color-primary, #3880ff);font-size:14px;font-weight:500;text-transform:uppercase;-webkit-box-shadow:none;box-shadow:none}.picker-columns.sc-ion-picker-md{height:216px;-webkit-perspective:1800px;perspective:1800px}.picker-above-highlight.sc-ion-picker-md{top:0;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);position:absolute;width:100%;height:81px;border-bottom:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));background:-webkit-gradient(linear, left top, left bottom, color-stop(20%, var(--ion-background-color, #fff)), to(rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8)));background:linear-gradient(to bottom, var(--ion-background-color, #fff) 20%, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8) 100%);z-index:10}@supports (inset-inline-start: 0){.picker-above-highlight.sc-ion-picker-md{inset-inline-start:0}}@supports not (inset-inline-start: 0){.picker-above-highlight.sc-ion-picker-md{left:0}[dir=rtl].sc-ion-picker-md-h .picker-above-highlight.sc-ion-picker-md,[dir=rtl] .sc-ion-picker-md-h .picker-above-highlight.sc-ion-picker-md{left:unset;right:unset;right:0}[dir=rtl].sc-ion-picker-md .picker-above-highlight.sc-ion-picker-md{left:unset;right:unset;right:0}@supports selector(:dir(rtl)){.picker-above-highlight.sc-ion-picker-md:dir(rtl){left:unset;right:unset;right:0}}}.picker-below-highlight.sc-ion-picker-md{top:115px;-webkit-transform:translate3d(0,  0,  90px);transform:translate3d(0,  0,  90px);position:absolute;width:100%;height:119px;border-top:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));background:-webkit-gradient(linear, left bottom, left top, color-stop(30%, var(--ion-background-color, #fff)), to(rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8)));background:linear-gradient(to top, var(--ion-background-color, #fff) 30%, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8) 100%);z-index:11}@supports (inset-inline-start: 0){.picker-below-highlight.sc-ion-picker-md{inset-inline-start:0}}@supports not (inset-inline-start: 0){.picker-below-highlight.sc-ion-picker-md{left:0}[dir=rtl].sc-ion-picker-md-h .picker-below-highlight.sc-ion-picker-md,[dir=rtl] .sc-ion-picker-md-h .picker-below-highlight.sc-ion-picker-md{left:unset;right:unset;right:0}[dir=rtl].sc-ion-picker-md .picker-below-highlight.sc-ion-picker-md{left:unset;right:unset;right:0}@supports selector(:dir(rtl)){.picker-below-highlight.sc-ion-picker-md:dir(rtl){left:unset;right:unset;right:0}}}\";\nconst IonPickerMdStyle0 = pickerMdCss;\n\nconst Picker = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.didPresent = createEvent(this, \"ionPickerDidPresent\", 7);\n        this.willPresent = createEvent(this, \"ionPickerWillPresent\", 7);\n        this.willDismiss = createEvent(this, \"ionPickerWillDismiss\", 7);\n        this.didDismiss = createEvent(this, \"ionPickerDidDismiss\", 7);\n        this.didPresentShorthand = createEvent(this, \"didPresent\", 7);\n        this.willPresentShorthand = createEvent(this, \"willPresent\", 7);\n        this.willDismissShorthand = createEvent(this, \"willDismiss\", 7);\n        this.didDismissShorthand = createEvent(this, \"didDismiss\", 7);\n        this.delegateController = createDelegateController(this);\n        this.lockController = createLockController();\n        this.triggerController = createTriggerController();\n        this.onBackdropTap = () => {\n            this.dismiss(undefined, BACKDROP);\n        };\n        this.dispatchCancelHandler = (ev) => {\n            const role = ev.detail.role;\n            if (isCancel(role)) {\n                const cancelButton = this.buttons.find((b) => b.role === 'cancel');\n                this.callButtonHandler(cancelButton);\n            }\n        };\n        this.presented = false;\n        this.overlayIndex = undefined;\n        this.delegate = undefined;\n        this.hasController = false;\n        this.keyboardClose = true;\n        this.enterAnimation = undefined;\n        this.leaveAnimation = undefined;\n        this.buttons = [];\n        this.columns = [];\n        this.cssClass = undefined;\n        this.duration = 0;\n        this.showBackdrop = true;\n        this.backdropDismiss = true;\n        this.animated = true;\n        this.htmlAttributes = undefined;\n        this.isOpen = false;\n        this.trigger = undefined;\n    }\n    onIsOpenChange(newValue, oldValue) {\n        if (newValue === true && oldValue === false) {\n            this.present();\n        }\n        else if (newValue === false && oldValue === true) {\n            this.dismiss();\n        }\n    }\n    triggerChanged() {\n        const { trigger, el, triggerController } = this;\n        if (trigger) {\n            triggerController.addClickListener(el, trigger);\n        }\n    }\n    connectedCallback() {\n        prepareOverlay(this.el);\n        this.triggerChanged();\n    }\n    disconnectedCallback() {\n        this.triggerController.removeClickListener();\n    }\n    componentWillLoad() {\n        setOverlayId(this.el);\n    }\n    componentDidLoad() {\n        /**\n         * If picker was rendered with isOpen=\"true\"\n         * then we should open picker immediately.\n         */\n        if (this.isOpen === true) {\n            raf(() => this.present());\n        }\n        /**\n         * When binding values in frameworks such as Angular\n         * it is possible for the value to be set after the Web Component\n         * initializes but before the value watcher is set up in Stencil.\n         * As a result, the watcher callback may not be fired.\n         * We work around this by manually calling the watcher\n         * callback when the component has loaded and the watcher\n         * is configured.\n         */\n        this.triggerChanged();\n    }\n    /**\n     * Present the picker overlay after it has been created.\n     */\n    async present() {\n        const unlock = await this.lockController.lock();\n        await this.delegateController.attachViewToDom();\n        await present(this, 'pickerEnter', iosEnterAnimation, iosEnterAnimation, undefined);\n        if (this.duration > 0) {\n            this.durationTimeout = setTimeout(() => this.dismiss(), this.duration);\n        }\n        unlock();\n    }\n    /**\n     * Dismiss the picker overlay after it has been presented.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the picker.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the picker.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     *\n     * This is a no-op if the overlay has not been presented yet. If you want\n     * to remove an overlay from the DOM that was never presented, use the\n     * [remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\n     */\n    async dismiss(data, role) {\n        const unlock = await this.lockController.lock();\n        if (this.durationTimeout) {\n            clearTimeout(this.durationTimeout);\n        }\n        const dismissed = await dismiss(this, data, role, 'pickerLeave', iosLeaveAnimation, iosLeaveAnimation);\n        if (dismissed) {\n            this.delegateController.removeViewFromDom();\n        }\n        unlock();\n        return dismissed;\n    }\n    /**\n     * Returns a promise that resolves when the picker did dismiss.\n     */\n    onDidDismiss() {\n        return eventMethod(this.el, 'ionPickerDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the picker will dismiss.\n     */\n    onWillDismiss() {\n        return eventMethod(this.el, 'ionPickerWillDismiss');\n    }\n    /**\n     * Get the column that matches the specified name.\n     *\n     * @param name The name of the column.\n     */\n    getColumn(name) {\n        return Promise.resolve(this.columns.find((column) => column.name === name));\n    }\n    async buttonClick(button) {\n        const role = button.role;\n        if (isCancel(role)) {\n            return this.dismiss(undefined, role);\n        }\n        const shouldDismiss = await this.callButtonHandler(button);\n        if (shouldDismiss) {\n            return this.dismiss(this.getSelected(), button.role);\n        }\n        return Promise.resolve();\n    }\n    async callButtonHandler(button) {\n        if (button) {\n            // a handler has been provided, execute it\n            // pass the handler the values from the inputs\n            const rtn = await safeCall(button.handler, this.getSelected());\n            if (rtn === false) {\n                // if the return value of the handler is false then do not dismiss\n                return false;\n            }\n        }\n        return true;\n    }\n    getSelected() {\n        const selected = {};\n        this.columns.forEach((col, index) => {\n            const selectedColumn = col.selectedIndex !== undefined ? col.options[col.selectedIndex] : undefined;\n            selected[col.name] = {\n                text: selectedColumn ? selectedColumn.text : undefined,\n                value: selectedColumn ? selectedColumn.value : undefined,\n                columnIndex: index,\n            };\n        });\n        return selected;\n    }\n    render() {\n        const { htmlAttributes } = this;\n        const mode = getIonMode(this);\n        return (h(Host, Object.assign({ key: 'eb5f91ea74fb11daa6942f779ef461742cad9ecb', \"aria-modal\": \"true\", tabindex: \"-1\" }, htmlAttributes, { style: {\n                zIndex: `${20000 + this.overlayIndex}`,\n            }, class: Object.assign({ [mode]: true,\n                // Used internally for styling\n                [`picker-${mode}`]: true, 'overlay-hidden': true }, getClassMap(this.cssClass)), onIonBackdropTap: this.onBackdropTap, onIonPickerWillDismiss: this.dispatchCancelHandler }), h(\"ion-backdrop\", { key: '7ea872d939e62f14129fff15334b2822ad2360c9', visible: this.showBackdrop, tappable: this.backdropDismiss }), h(\"div\", { key: '2d77c225091eacab0207e28c96b966122afafef0', tabindex: \"0\" }), h(\"div\", { key: '630d21e0c60ad97b71462cdc540858bb6ced0b8f', class: \"picker-wrapper ion-overlay-wrapper\", role: \"dialog\" }, h(\"div\", { key: 'fa8553ec8d2ce8bf93e16e02334b6475cb51b5d4', class: \"picker-toolbar\" }, this.buttons.map((b) => (h(\"div\", { class: buttonWrapperClass(b) }, h(\"button\", { type: \"button\", onClick: () => this.buttonClick(b), class: buttonClass(b) }, b.text))))), h(\"div\", { key: '177d1bcbd0ce38f16d9c936295a917fb981d02d7', class: \"picker-columns\" }, h(\"div\", { key: 'be99b6e0279c210ef91a88ccc81acc7d37917a53', class: \"picker-above-highlight\" }), this.presented && this.columns.map((c) => h(\"ion-picker-column\", { col: c })), h(\"div\", { key: 'b36b21e8133b59e873e1d3447a1279f1b971c854', class: \"picker-below-highlight\" }))), h(\"div\", { key: '17cea6dd24dbb0a08073ca4a84bfe027eb24833d', tabindex: \"0\" })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"isOpen\": [\"onIsOpenChange\"],\n        \"trigger\": [\"triggerChanged\"]\n    }; }\n};\nconst buttonWrapperClass = (button) => {\n    return {\n        [`picker-toolbar-${button.role}`]: button.role !== undefined,\n        'picker-toolbar-button': true,\n    };\n};\nconst buttonClass = (button) => {\n    return Object.assign({ 'picker-button': true, 'ion-activatable': true }, getClassMap(button.cssClass));\n};\nPicker.style = {\n    ios: IonPickerIosStyle0,\n    md: IonPickerMdStyle0\n};\n\nconst pickerColumnIosCss = \".picker-col{display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-pack:center;justify-content:center;height:100%;-webkit-box-sizing:content-box;box-sizing:content-box;contain:content}.picker-opts{position:relative;-ms-flex:1;flex:1;max-width:100%}.picker-opt{top:0;display:block;position:absolute;width:100%;border:0;text-align:center;text-overflow:ellipsis;white-space:nowrap;contain:strict;overflow:hidden;will-change:transform}@supports (inset-inline-start: 0){.picker-opt{inset-inline-start:0}}@supports not (inset-inline-start: 0){.picker-opt{left:0}:host-context([dir=rtl]) .picker-opt{left:unset;right:unset;right:0}[dir=rtl] .picker-opt{left:unset;right:unset;right:0}@supports selector(:dir(rtl)){.picker-opt:dir(rtl){left:unset;right:unset;right:0}}}.picker-opt.picker-opt-disabled{pointer-events:none}.picker-opt-disabled{opacity:0}.picker-opts-left{-ms-flex-pack:start;justify-content:flex-start}.picker-opts-right{-ms-flex-pack:end;justify-content:flex-end}.picker-opt:active,.picker-opt:focus{outline:none}.picker-prefix{position:relative;-ms-flex:1;flex:1;text-align:end;white-space:nowrap}.picker-suffix{position:relative;-ms-flex:1;flex:1;text-align:start;white-space:nowrap}.picker-col{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:0;padding-bottom:0;-webkit-transform-style:preserve-3d;transform-style:preserve-3d}.picker-prefix,.picker-suffix,.picker-opts{top:77px;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;color:inherit;font-size:20px;line-height:42px;pointer-events:none}.picker-opt{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-transform-origin:center center;transform-origin:center center;height:46px;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;background:transparent;color:inherit;font-size:20px;line-height:42px;-webkit-backface-visibility:hidden;backface-visibility:hidden;pointer-events:auto}:host-context([dir=rtl]) .picker-opt{-webkit-transform-origin:calc(100% - center) center;transform-origin:calc(100% - center) center}[dir=rtl] .picker-opt{-webkit-transform-origin:calc(100% - center) center;transform-origin:calc(100% - center) center}@supports selector(:dir(rtl)){.picker-opt:dir(rtl){-webkit-transform-origin:calc(100% - center) center;transform-origin:calc(100% - center) center}}\";\nconst IonPickerColumnIosStyle0 = pickerColumnIosCss;\n\nconst pickerColumnMdCss = \".picker-col{display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-pack:center;justify-content:center;height:100%;-webkit-box-sizing:content-box;box-sizing:content-box;contain:content}.picker-opts{position:relative;-ms-flex:1;flex:1;max-width:100%}.picker-opt{top:0;display:block;position:absolute;width:100%;border:0;text-align:center;text-overflow:ellipsis;white-space:nowrap;contain:strict;overflow:hidden;will-change:transform}@supports (inset-inline-start: 0){.picker-opt{inset-inline-start:0}}@supports not (inset-inline-start: 0){.picker-opt{left:0}:host-context([dir=rtl]) .picker-opt{left:unset;right:unset;right:0}[dir=rtl] .picker-opt{left:unset;right:unset;right:0}@supports selector(:dir(rtl)){.picker-opt:dir(rtl){left:unset;right:unset;right:0}}}.picker-opt.picker-opt-disabled{pointer-events:none}.picker-opt-disabled{opacity:0}.picker-opts-left{-ms-flex-pack:start;justify-content:flex-start}.picker-opts-right{-ms-flex-pack:end;justify-content:flex-end}.picker-opt:active,.picker-opt:focus{outline:none}.picker-prefix{position:relative;-ms-flex:1;flex:1;text-align:end;white-space:nowrap}.picker-suffix{position:relative;-ms-flex:1;flex:1;text-align:start;white-space:nowrap}.picker-col{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:0;padding-bottom:0;-webkit-transform-style:preserve-3d;transform-style:preserve-3d}.picker-prefix,.picker-suffix,.picker-opts{top:77px;-webkit-transform-style:preserve-3d;transform-style:preserve-3d;color:inherit;font-size:22px;line-height:42px;pointer-events:none}.picker-opt{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;height:43px;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;background:transparent;color:inherit;font-size:22px;line-height:42px;-webkit-backface-visibility:hidden;backface-visibility:hidden;pointer-events:auto}.picker-prefix,.picker-suffix,.picker-opt.picker-opt-selected{color:var(--ion-color-primary, #3880ff)}\";\nconst IonPickerColumnMdStyle0 = pickerColumnMdCss;\n\nconst PickerColumnCmp = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionPickerColChange = createEvent(this, \"ionPickerColChange\", 7);\n        this.optHeight = 0;\n        this.rotateFactor = 0;\n        this.scaleFactor = 1;\n        this.velocity = 0;\n        this.y = 0;\n        this.noAnimate = true;\n        // `colDidChange` is a flag that gets set when the column is changed\n        // dynamically. When this flag is set, the column will refresh\n        // after the component re-renders to incorporate the new column data.\n        // This is necessary because `this.refresh` queries for the option elements,\n        // so it needs to wait for the latest elements to be available in the DOM.\n        // Ex: column is created with 3 options. User updates the column data\n        // to have 5 options. The column will still think it only has 3 options.\n        this.colDidChange = false;\n        this.col = undefined;\n    }\n    colChanged() {\n        this.colDidChange = true;\n    }\n    async connectedCallback() {\n        let pickerRotateFactor = 0;\n        let pickerScaleFactor = 0.81;\n        const mode = getIonMode(this);\n        if (mode === 'ios') {\n            pickerRotateFactor = -0.46;\n            pickerScaleFactor = 1;\n        }\n        this.rotateFactor = pickerRotateFactor;\n        this.scaleFactor = pickerScaleFactor;\n        this.gesture = (await import('./index-2cf77112.js')).createGesture({\n            el: this.el,\n            gestureName: 'picker-swipe',\n            gesturePriority: 100,\n            threshold: 0,\n            passive: false,\n            onStart: (ev) => this.onStart(ev),\n            onMove: (ev) => this.onMove(ev),\n            onEnd: (ev) => this.onEnd(ev),\n        });\n        this.gesture.enable();\n        // Options have not been initialized yet\n        // Animation must be disabled through the `noAnimate` flag\n        // Otherwise, the options will render\n        // at the top of the column and transition down\n        this.tmrId = setTimeout(() => {\n            this.noAnimate = false;\n            // After initialization, `refresh()` will be called\n            // At this point, animation will be enabled. The options will\n            // animate as they are being selected.\n            this.refresh(true);\n        }, 250);\n    }\n    componentDidLoad() {\n        this.onDomChange();\n    }\n    componentDidUpdate() {\n        // Options may have changed since last update.\n        if (this.colDidChange) {\n            // Animation must be disabled through the `onDomChange` parameter.\n            // Otherwise, the recently added options will render\n            // at the top of the column and transition down\n            this.onDomChange(true, false);\n            this.colDidChange = false;\n        }\n    }\n    disconnectedCallback() {\n        if (this.rafId !== undefined)\n            cancelAnimationFrame(this.rafId);\n        if (this.tmrId)\n            clearTimeout(this.tmrId);\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    emitColChange() {\n        this.ionPickerColChange.emit(this.col);\n    }\n    setSelected(selectedIndex, duration) {\n        // if there is a selected index, then figure out it's y position\n        // if there isn't a selected index, then just use the top y position\n        const y = selectedIndex > -1 ? -(selectedIndex * this.optHeight) : 0;\n        this.velocity = 0;\n        // set what y position we're at\n        if (this.rafId !== undefined)\n            cancelAnimationFrame(this.rafId);\n        this.update(y, duration, true);\n        this.emitColChange();\n    }\n    update(y, duration, saveY) {\n        if (!this.optsEl) {\n            return;\n        }\n        // ensure we've got a good round number :)\n        let translateY = 0;\n        let translateZ = 0;\n        const { col, rotateFactor } = this;\n        const prevSelected = col.selectedIndex;\n        const selectedIndex = (col.selectedIndex = this.indexForY(-y));\n        const durationStr = duration === 0 ? '' : duration + 'ms';\n        const scaleStr = `scale(${this.scaleFactor})`;\n        const children = this.optsEl.children;\n        for (let i = 0; i < children.length; i++) {\n            const button = children[i];\n            const opt = col.options[i];\n            const optOffset = i * this.optHeight + y;\n            let transform = '';\n            if (rotateFactor !== 0) {\n                const rotateX = optOffset * rotateFactor;\n                if (Math.abs(rotateX) <= 90) {\n                    translateY = 0;\n                    translateZ = 90;\n                    transform = `rotateX(${rotateX}deg) `;\n                }\n                else {\n                    translateY = -9999;\n                }\n            }\n            else {\n                translateZ = 0;\n                translateY = optOffset;\n            }\n            const selected = selectedIndex === i;\n            transform += `translate3d(0px,${translateY}px,${translateZ}px) `;\n            if (this.scaleFactor !== 1 && !selected) {\n                transform += scaleStr;\n            }\n            // Update transition duration\n            if (this.noAnimate) {\n                opt.duration = 0;\n                button.style.transitionDuration = '';\n            }\n            else if (duration !== opt.duration) {\n                opt.duration = duration;\n                button.style.transitionDuration = durationStr;\n            }\n            // Update transform\n            if (transform !== opt.transform) {\n                opt.transform = transform;\n            }\n            button.style.transform = transform;\n            /**\n             * Ensure that the select column\n             * item has the selected class\n             */\n            opt.selected = selected;\n            if (selected) {\n                button.classList.add(PICKER_OPT_SELECTED);\n            }\n            else {\n                button.classList.remove(PICKER_OPT_SELECTED);\n            }\n        }\n        this.col.prevSelected = prevSelected;\n        if (saveY) {\n            this.y = y;\n        }\n        if (this.lastIndex !== selectedIndex) {\n            // have not set a last index yet\n            hapticSelectionChanged();\n            this.lastIndex = selectedIndex;\n        }\n    }\n    decelerate() {\n        if (this.velocity !== 0) {\n            // still decelerating\n            this.velocity *= DECELERATION_FRICTION;\n            // do not let it go slower than a velocity of 1\n            this.velocity = this.velocity > 0 ? Math.max(this.velocity, 1) : Math.min(this.velocity, -1);\n            let y = this.y + this.velocity;\n            if (y > this.minY) {\n                // whoops, it's trying to scroll up farther than the options we have!\n                y = this.minY;\n                this.velocity = 0;\n            }\n            else if (y < this.maxY) {\n                // gahh, it's trying to scroll down farther than we can!\n                y = this.maxY;\n                this.velocity = 0;\n            }\n            this.update(y, 0, true);\n            const notLockedIn = Math.round(y) % this.optHeight !== 0 || Math.abs(this.velocity) > 1;\n            if (notLockedIn) {\n                // isn't locked in yet, keep decelerating until it is\n                this.rafId = requestAnimationFrame(() => this.decelerate());\n            }\n            else {\n                this.velocity = 0;\n                this.emitColChange();\n                hapticSelectionEnd();\n            }\n        }\n        else if (this.y % this.optHeight !== 0) {\n            // needs to still get locked into a position so options line up\n            const currentPos = Math.abs(this.y % this.optHeight);\n            // create a velocity in the direction it needs to scroll\n            this.velocity = currentPos > this.optHeight / 2 ? 1 : -1;\n            this.decelerate();\n        }\n    }\n    indexForY(y) {\n        return Math.min(Math.max(Math.abs(Math.round(y / this.optHeight)), 0), this.col.options.length - 1);\n    }\n    onStart(detail) {\n        // We have to prevent default in order to block scrolling under the picker\n        // but we DO NOT have to stop propagation, since we still want\n        // some \"click\" events to capture\n        if (detail.event.cancelable) {\n            detail.event.preventDefault();\n        }\n        detail.event.stopPropagation();\n        hapticSelectionStart();\n        // reset everything\n        if (this.rafId !== undefined)\n            cancelAnimationFrame(this.rafId);\n        const options = this.col.options;\n        let minY = options.length - 1;\n        let maxY = 0;\n        for (let i = 0; i < options.length; i++) {\n            if (!options[i].disabled) {\n                minY = Math.min(minY, i);\n                maxY = Math.max(maxY, i);\n            }\n        }\n        this.minY = -(minY * this.optHeight);\n        this.maxY = -(maxY * this.optHeight);\n    }\n    onMove(detail) {\n        if (detail.event.cancelable) {\n            detail.event.preventDefault();\n        }\n        detail.event.stopPropagation();\n        // update the scroll position relative to pointer start position\n        let y = this.y + detail.deltaY;\n        if (y > this.minY) {\n            // scrolling up higher than scroll area\n            y = Math.pow(y, 0.8);\n            this.bounceFrom = y;\n        }\n        else if (y < this.maxY) {\n            // scrolling down below scroll area\n            y += Math.pow(this.maxY - y, 0.9);\n            this.bounceFrom = y;\n        }\n        else {\n            this.bounceFrom = 0;\n        }\n        this.update(y, 0, false);\n    }\n    onEnd(detail) {\n        if (this.bounceFrom > 0) {\n            // bounce back up\n            this.update(this.minY, 100, true);\n            this.emitColChange();\n            return;\n        }\n        else if (this.bounceFrom < 0) {\n            // bounce back down\n            this.update(this.maxY, 100, true);\n            this.emitColChange();\n            return;\n        }\n        this.velocity = clamp(-MAX_PICKER_SPEED, detail.velocityY * 23, MAX_PICKER_SPEED);\n        if (this.velocity === 0 && detail.deltaY === 0) {\n            const opt = detail.event.target.closest('.picker-opt');\n            if (opt === null || opt === void 0 ? void 0 : opt.hasAttribute('opt-index')) {\n                this.setSelected(parseInt(opt.getAttribute('opt-index'), 10), TRANSITION_DURATION);\n            }\n        }\n        else {\n            this.y += detail.deltaY;\n            if (Math.abs(detail.velocityY) < 0.05) {\n                const isScrollingUp = detail.deltaY > 0;\n                const optHeightFraction = (Math.abs(this.y) % this.optHeight) / this.optHeight;\n                if (isScrollingUp && optHeightFraction > 0.5) {\n                    this.velocity = Math.abs(this.velocity) * -1;\n                }\n                else if (!isScrollingUp && optHeightFraction <= 0.5) {\n                    this.velocity = Math.abs(this.velocity);\n                }\n            }\n            this.decelerate();\n        }\n    }\n    refresh(forceRefresh, animated) {\n        var _a;\n        let min = this.col.options.length - 1;\n        let max = 0;\n        const options = this.col.options;\n        for (let i = 0; i < options.length; i++) {\n            if (!options[i].disabled) {\n                min = Math.min(min, i);\n                max = Math.max(max, i);\n            }\n        }\n        /**\n         * Only update selected value if column has a\n         * velocity of 0. If it does not, then the\n         * column is animating might land on\n         * a value different than the value at\n         * selectedIndex\n         */\n        if (this.velocity !== 0) {\n            return;\n        }\n        const selectedIndex = clamp(min, (_a = this.col.selectedIndex) !== null && _a !== void 0 ? _a : 0, max);\n        if (this.col.prevSelected !== selectedIndex || forceRefresh) {\n            const y = selectedIndex * this.optHeight * -1;\n            const duration = animated ? TRANSITION_DURATION : 0;\n            this.velocity = 0;\n            this.update(y, duration, true);\n        }\n    }\n    onDomChange(forceRefresh, animated) {\n        const colEl = this.optsEl;\n        if (colEl) {\n            // DOM READ\n            // We perfom a DOM read over a rendered item, this needs to happen after the first render or after the the column has changed\n            this.optHeight = colEl.firstElementChild ? colEl.firstElementChild.clientHeight : 0;\n        }\n        this.refresh(forceRefresh, animated);\n    }\n    render() {\n        const col = this.col;\n        const mode = getIonMode(this);\n        return (h(Host, { key: '49bb4c67a67c7318d4c305df78ceabae36355112', class: Object.assign({ [mode]: true, 'picker-col': true, 'picker-opts-left': this.col.align === 'left', 'picker-opts-right': this.col.align === 'right' }, getClassMap(col.cssClass)), style: {\n                'max-width': this.col.columnWidth,\n            } }, col.prefix && (h(\"div\", { key: '7e65761d24473e4ba0ce2d4fc707a5c5e8127903', class: \"picker-prefix\", style: { width: col.prefixWidth } }, col.prefix)), h(\"div\", { key: '65c3aea609401e8ae4ea6d363a1b9436796c0a86', class: \"picker-opts\", style: { maxWidth: col.optionsWidth }, ref: (el) => (this.optsEl = el) }, col.options.map((o, index) => (h(\"button\", { \"aria-label\": o.ariaLabel, class: { 'picker-opt': true, 'picker-opt-disabled': !!o.disabled }, \"opt-index\": index }, o.text)))), col.suffix && (h(\"div\", { key: 'c2e5a324ba95dd8832d3eb81b139e1f674d74a35', class: \"picker-suffix\", style: { width: col.suffixWidth } }, col.suffix))));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"col\": [\"colChanged\"]\n    }; }\n};\nconst PICKER_OPT_SELECTED = 'picker-opt-selected';\nconst DECELERATION_FRICTION = 0.97;\nconst MAX_PICKER_SPEED = 90;\nconst TRANSITION_DURATION = 150;\nPickerColumnCmp.style = {\n    ios: IonPickerColumnIosStyle0,\n    md: IonPickerColumnMdStyle0\n};\n\nexport { Datetime as ion_datetime, Picker as ion_picker, PickerColumnCmp as ion_picker_column };\n"],"x_google_ignoreList":[0]}